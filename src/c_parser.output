Terminals unused in grammar

   AUTO
   STRUCT
   BREAK
   LONG
   SWITCH
   CASE
   ENUM
   REGISTER
   TYPEDEF
   EXTERN
   UNION
   CONST
   FLOAT
   SHORT
   UNSIGNED
   CONTINUE
   SIGNED
   VOID
   DEFAULT
   GOTO
   VOLATILE
   STATIC
   THREE_DOTS
   HASH
   HASH_HASH


State 169 conflicts: 1 shift/reduce
State 189 conflicts: 1 shift/reduce
State 196 conflicts: 1 shift/reduce
State 214 conflicts: 24 reduce/reduce
State 230 conflicts: 24 reduce/reduce
State 234 conflicts: 24 reduce/reduce
State 236 conflicts: 24 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: fn_declaration
    2        | declaration
    3        | program fn_declaration
    4        | program declaration

    5 CONSTANT: FLOATING_CONST
    6         | INTEGER_CONST
    7         | CHAR_CONST

    8 type_name: INT
    9          | DOUBLE
   10          | CHAR

   11 declaration: INT init_declarator_list SEMI_COLON
   12            | INT SEMI_COLON

   13 init_declarator_list: init_declarator
   14                     | init_declarator_list COMMA init_declarator

   15 init_declarator: declarator
   16                | declarator EQUALS initializer

   17 declarator: direct_declarator

   18 direct_declarator: IDENTIFIER
   19                  | LBRACKET declarator RBRACKET

   20 initializer: assignment_expression
   21            | LCURLY initializer_list RCURLY
   22            | LCURLY initializer_list COMMA RCURLY

   23 initializer_list: initializer
   24                 | initializer_list COMMA initializer

   25 primary_expression: IDENTIFIER
   26                   | CONSTANT
   27                   | STRING_LITERAL
   28                   | LBRACKET expression RBRACKET

   29 postfix_expression: primary_expression
   30                   | postfix_expression LSQUARE expression RSQUARE
   31                   | postfix_expression LBRACKET argument_expression_list RBRACKET
   32                   | postfix_expression LBRACKET RBRACKET
   33                   | postfix_expression DOT IDENTIFIER
   34                   | postfix_expression PTR_OP IDENTIFIER
   35                   | postfix_expression PLUS_PLUS
   36                   | postfix_expression MINUS_MINUS

   37 argument_expression_list: assignment_expression
   38                         | argument_expression_list COMMA assignment_expression

   39 unary_expression: postfix_expression
   40                 | PLUS_PLUS unary_expression
   41                 | MINUS_MINUS unary_expression
   42                 | UNARY_OPERATOR cast_expression
   43                 | SIZEOF unary_expression
   44                 | SIZEOF LBRACKET INT RBRACKET

   45 UNARY_OPERATOR: BITWISE_AND
   46               | MULT
   47               | PLUS
   48               | MINUS
   49               | WAVE
   50               | EXL_MARK

   51 cast_expression: unary_expression
   52                | LBRACKET type_name RBRACKET cast_expression

   53 multiplicative_expression: cast_expression
   54                          | multiplicative_expression MULT cast_expression
   55                          | multiplicative_expression DIV cast_expression
   56                          | multiplicative_expression PERCENT cast_expression

   57 additive_expression: multiplicative_expression
   58                    | additive_expression PLUS multiplicative_expression
   59                    | additive_expression MINUS multiplicative_expression

   60 shift_expression: additive_expression
   61                 | shift_expression LSHIFT additive_expression
   62                 | shift_expression RSHIFT additive_expression

   63 relational_expression: shift_expression
   64                      | relational_expression LOGICAL_LESS shift_expression
   65                      | relational_expression LOGICAL_MORE shift_expression
   66                      | relational_expression LESS_OR_EQUAL shift_expression
   67                      | relational_expression MORE_OR_EQUAL shift_expression

   68 equality_expression: relational_expression
   69                    | equality_expression LOGICAL_EQUALITY relational_expression
   70                    | equality_expression LOGICAL_INEQUALITY relational_expression

   71 and_expression: equality_expression
   72               | and_expression BITWISE_AND equality_expression

   73 exclusive_or_expression: and_expression
   74                        | exclusive_or_expression BITWISE_XOR and_expression

   75 inclusive_or_expression: exclusive_or_expression
   76                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   77 logical_and_expression: inclusive_or_expression
   78                       | logical_and_expression LOGICAL_AND inclusive_or_expression

   79 logical_or_expression: logical_and_expression
   80                      | logical_or_expression LOGICAL_OR logical_and_expression

   81 conditional_expression: logical_or_expression
   82                       | logical_or_expression Q_MARK expression COLON conditional_expression

   83 assignment_expression: conditional_expression
   84                      | unary_expression ASSIGNMENT_OPERATOR assignment_expression

   85 ASSIGNMENT_OPERATOR: EQUALS
   86                    | MULT_EQUALS
   87                    | DIV_EQUALS
   88                    | PERCENT_EQUALS
   89                    | PLUS_EQUALS
   90                    | MINUS_EQUALS
   91                    | LSHIFT_EQUALS
   92                    | RSHIFT_EQUALS
   93                    | AND_EQUALS
   94                    | XOR_EQUALS
   95                    | OR_EQUALS

   96 expression: assignment_expression

   97 expression_list: expression
   98                | expression_list COMMA expression

   99 fn_declaration: INT IDENTIFIER LBRACKET fn_params_list RBRACKET compound_statement

  100 fn_params_list: INT bracketed_identifier
  101               | fn_params_list COMMA INT bracketed_identifier
  102               | %empty

  103 bracketed_identifier: IDENTIFIER
  104                     | LBRACKET bracketed_identifier RBRACKET

  105 loop: for_loop
  106     | while_loop
  107     | do_while_loop

  108 do_while_loop: DO compound_statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON
  109              | DO statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON

  110 for_loop: FOR LBRACKET for_loop_decl_statement RBRACKET compound_statement
  111         | FOR LBRACKET for_loop_decl_statement RBRACKET statement

  112 for_loop_decl_statement: expression_list SEMI_COLON expression_list SEMI_COLON expression_list
  113                        | expression_list SEMI_COLON expression_list SEMI_COLON
  114                        | expression_list SEMI_COLON SEMI_COLON expression_list
  115                        | SEMI_COLON expression_list SEMI_COLON expression_list
  116                        | expression_list SEMI_COLON SEMI_COLON
  117                        | SEMI_COLON SEMI_COLON expression_list
  118                        | SEMI_COLON expression_list SEMI_COLON
  119                        | SEMI_COLON SEMI_COLON

  120 while_loop: WHILE LBRACKET expression_list RBRACKET compound_statement
  121           | WHILE LBRACKET expression_list RBRACKET statement

  122 if_block_statement: if_statement
  123                   | if_statement else_statement_list

  124 else_statement_list: else_statement
  125                    | else_statement_list else_statement

  126 if_statement: IF LBRACKET expression_list RBRACKET compound_statement
  127             | IF LBRACKET expression_list RBRACKET statement

  128 else_statement: ELSE compound_statement
  129               | ELSE statement

  130 compound_statement: LCURLY declaration_list statement_list RCURLY
  131                   | LCURLY statement_list RCURLY
  132                   | LCURLY declaration_list RCURLY
  133                   | LCURLY RCURLY

  134 declaration_list: declaration
  135                 | declaration_list declaration

  136 statement_list: statement
  137               | statement_list statement

  138 statement: loop
  139          | if_block_statement
  140          | expression_statement
  141          | semi_colon_statement
  142          | compound_statement

  143 expression_statement: expression_list SEMI_COLON

  144 semi_colon_statement: return_statement
  145                     | SEMI_COLON

  146 return_statement: RETURN expression SEMI_COLON
  147                 | RETURN SEMI_COLON


Terminals, with rules where they appear

$end (0) 0
error (256)
AUTO (258)
DOUBLE (259) 9
INT (260) 8 11 12 44 99 100 101
STRUCT (261)
BREAK (262)
ELSE (263) 128 129
LONG (264)
SWITCH (265)
CASE (266)
ENUM (267)
REGISTER (268)
TYPEDEF (269)
CHAR (270) 10
EXTERN (271)
RETURN (272) 146 147
UNION (273)
CONST (274)
FLOAT (275)
SHORT (276)
UNSIGNED (277)
CONTINUE (278)
FOR (279) 110 111
SIGNED (280)
VOID (281)
DEFAULT (282)
GOTO (283)
VOLATILE (284)
DO (285) 108 109
IF (286) 126 127
STATIC (287)
WHILE (288) 108 109 120 121
LSQUARE (289) 30
RSQUARE (290) 30
LBRACKET (291) 19 28 31 32 44 52 99 104 108 109 110 111 120 121 126
    127
RBRACKET (292) 19 28 31 32 44 52 99 104 108 109 110 111 120 121 126
    127
LCURLY (293) 21 22 130 131 132 133
RCURLY (294) 21 22 130 131 132 133
THREE_DOTS (295)
DOT (296) 33
PTR_OP (297) 34
PLUS_PLUS (298) 35 40
MINUS_MINUS (299) 36 41
SIZEOF (300) 43 44
LSHIFT (301) 61
RSHIFT (302) 62
LESS_OR_EQUAL (303) 66
MORE_OR_EQUAL (304) 67
LOGICAL_EQUALITY (305) 69
LOGICAL_INEQUALITY (306) 70
LOGICAL_AND (307) 78
LOGICAL_OR (308) 80
Q_MARK (309) 82
COLON (310) 82
MULT_EQUALS (311) 86
DIV_EQUALS (312) 87
PERCENT_EQUALS (313) 88
PLUS_EQUALS (314) 89
MINUS_EQUALS (315) 90
LSHIFT_EQUALS (316) 91
RSHIFT_EQUALS (317) 92
AND_EQUALS (318) 93
XOR_EQUALS (319) 94
OR_EQUALS (320) 95
COMMA (321) 14 22 24 38 98 101
HASH (322)
HASH_HASH (323)
SEMI_COLON (324) 11 12 108 109 112 113 114 115 116 117 118 119 143
    145 146 147
EQUALS (325) 16 85
BITWISE_OR (326) 76
BITWISE_AND (327) 45 72
BITWISE_XOR (328) 74
MULT (329) 46 54
PLUS (330) 47 58
MINUS (331) 48 59
WAVE (332) 49
EXL_MARK (333) 50
DIV (334) 55
PERCENT (335) 56
LOGICAL_MORE (336) 65
LOGICAL_LESS (337) 64
INTEGER_CONST (338) 6
FLOATING_CONST (339) 5
CHAR_CONST (340) 7
IDENTIFIER (341) 18 25 33 34 99 103
STRING_LITERAL (342) 27


Nonterminals, with rules where they appear

$accept (88)
    on left: 0
program (89)
    on left: 1 2 3 4, on right: 0 3 4
CONSTANT (90)
    on left: 5 6 7, on right: 26
type_name (91)
    on left: 8 9 10, on right: 52
declaration (92)
    on left: 11 12, on right: 2 4 134 135
init_declarator_list (93)
    on left: 13 14, on right: 11 14
init_declarator (94)
    on left: 15 16, on right: 13 14
declarator (95)
    on left: 17, on right: 15 16 19
direct_declarator (96)
    on left: 18 19, on right: 17
initializer (97)
    on left: 20 21 22, on right: 16 23 24
initializer_list (98)
    on left: 23 24, on right: 21 22 24
primary_expression (99)
    on left: 25 26 27 28, on right: 29
postfix_expression (100)
    on left: 29 30 31 32 33 34 35 36, on right: 30 31 32 33 34 35 36
    39
argument_expression_list (101)
    on left: 37 38, on right: 31 38
unary_expression (102)
    on left: 39 40 41 42 43 44, on right: 40 41 43 51 84
UNARY_OPERATOR (103)
    on left: 45 46 47 48 49 50, on right: 42
cast_expression (104)
    on left: 51 52, on right: 42 52 53 54 55 56
multiplicative_expression (105)
    on left: 53 54 55 56, on right: 54 55 56 57 58 59
additive_expression (106)
    on left: 57 58 59, on right: 58 59 60 61 62
shift_expression (107)
    on left: 60 61 62, on right: 61 62 63 64 65 66 67
relational_expression (108)
    on left: 63 64 65 66 67, on right: 64 65 66 67 68 69 70
equality_expression (109)
    on left: 68 69 70, on right: 69 70 71 72
and_expression (110)
    on left: 71 72, on right: 72 73 74
exclusive_or_expression (111)
    on left: 73 74, on right: 74 75 76
inclusive_or_expression (112)
    on left: 75 76, on right: 76 77 78
logical_and_expression (113)
    on left: 77 78, on right: 78 79 80
logical_or_expression (114)
    on left: 79 80, on right: 80 81 82
conditional_expression (115)
    on left: 81 82, on right: 82 83
assignment_expression (116)
    on left: 83 84, on right: 20 37 38 84 96
ASSIGNMENT_OPERATOR (117)
    on left: 85 86 87 88 89 90 91 92 93 94 95, on right: 84
expression (118)
    on left: 96, on right: 28 30 82 97 98 146
expression_list (119)
    on left: 97 98, on right: 98 108 109 112 113 114 115 116 117 118
    120 121 126 127 143
fn_declaration (120)
    on left: 99, on right: 1 3
fn_params_list (121)
    on left: 100 101 102, on right: 99 101
bracketed_identifier (122)
    on left: 103 104, on right: 100 101 104
loop (123)
    on left: 105 106 107, on right: 138
do_while_loop (124)
    on left: 108 109, on right: 107
for_loop (125)
    on left: 110 111, on right: 105
for_loop_decl_statement (126)
    on left: 112 113 114 115 116 117 118 119, on right: 110 111
while_loop (127)
    on left: 120 121, on right: 106
if_block_statement (128)
    on left: 122 123, on right: 139
else_statement_list (129)
    on left: 124 125, on right: 123 125
if_statement (130)
    on left: 126 127, on right: 122 123
else_statement (131)
    on left: 128 129, on right: 124 125
compound_statement (132)
    on left: 130 131 132 133, on right: 99 108 110 120 126 128 142
declaration_list (133)
    on left: 134 135, on right: 130 132 135
statement_list (134)
    on left: 136 137, on right: 130 131 137
statement (135)
    on left: 138 139 140 141 142, on right: 109 111 121 127 129 136
    137
expression_statement (136)
    on left: 143, on right: 140
semi_colon_statement (137)
    on left: 144 145, on right: 141
return_statement (138)
    on left: 146 147, on right: 144


State 0

    0 $accept: . program $end

    INT  shift, and go to state 1

    program         go to state 2
    declaration     go to state 3
    fn_declaration  go to state 4


State 1

   11 declaration: INT . init_declarator_list SEMI_COLON
   12            | INT . SEMI_COLON
   99 fn_declaration: INT . IDENTIFIER LBRACKET fn_params_list RBRACKET compound_statement

    LBRACKET    shift, and go to state 5
    SEMI_COLON  shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    init_declarator_list  go to state 8
    init_declarator       go to state 9
    declarator            go to state 10
    direct_declarator     go to state 11


State 2

    0 $accept: program . $end
    3 program: program . fn_declaration
    4        | program . declaration

    $end  shift, and go to state 12
    INT   shift, and go to state 1

    declaration     go to state 13
    fn_declaration  go to state 14


State 3

    2 program: declaration .

    $default  reduce using rule 2 (program)


State 4

    1 program: fn_declaration .

    $default  reduce using rule 1 (program)


State 5

   19 direct_declarator: LBRACKET . declarator RBRACKET

    LBRACKET    shift, and go to state 5
    IDENTIFIER  shift, and go to state 15

    declarator         go to state 16
    direct_declarator  go to state 11


State 6

   12 declaration: INT SEMI_COLON .

    $default  reduce using rule 12 (declaration)


State 7

   18 direct_declarator: IDENTIFIER .
   99 fn_declaration: INT IDENTIFIER . LBRACKET fn_params_list RBRACKET compound_statement

    LBRACKET  shift, and go to state 17

    $default  reduce using rule 18 (direct_declarator)


State 8

   11 declaration: INT init_declarator_list . SEMI_COLON
   14 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA       shift, and go to state 18
    SEMI_COLON  shift, and go to state 19


State 9

   13 init_declarator_list: init_declarator .

    $default  reduce using rule 13 (init_declarator_list)


State 10

   15 init_declarator: declarator .
   16                | declarator . EQUALS initializer

    EQUALS  shift, and go to state 20

    $default  reduce using rule 15 (init_declarator)


State 11

   17 declarator: direct_declarator .

    $default  reduce using rule 17 (declarator)


State 12

    0 $accept: program $end .

    $default  accept


State 13

    4 program: program declaration .

    $default  reduce using rule 4 (program)


State 14

    3 program: program fn_declaration .

    $default  reduce using rule 3 (program)


State 15

   18 direct_declarator: IDENTIFIER .

    $default  reduce using rule 18 (direct_declarator)


State 16

   19 direct_declarator: LBRACKET declarator . RBRACKET

    RBRACKET  shift, and go to state 21


State 17

   99 fn_declaration: INT IDENTIFIER LBRACKET . fn_params_list RBRACKET compound_statement

    INT  shift, and go to state 22

    $default  reduce using rule 102 (fn_params_list)

    fn_params_list  go to state 23


State 18

   14 init_declarator_list: init_declarator_list COMMA . init_declarator

    LBRACKET    shift, and go to state 5
    IDENTIFIER  shift, and go to state 15

    init_declarator    go to state 24
    declarator         go to state 10
    direct_declarator  go to state 11


State 19

   11 declaration: INT init_declarator_list SEMI_COLON .

    $default  reduce using rule 11 (declaration)


State 20

   16 init_declarator: declarator EQUALS . initializer

    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 26
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    initializer                go to state 42
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59


State 21

   19 direct_declarator: LBRACKET declarator RBRACKET .

    $default  reduce using rule 19 (direct_declarator)


State 22

  100 fn_params_list: INT . bracketed_identifier

    LBRACKET    shift, and go to state 60
    IDENTIFIER  shift, and go to state 61

    bracketed_identifier  go to state 62


State 23

   99 fn_declaration: INT IDENTIFIER LBRACKET fn_params_list . RBRACKET compound_statement
  101 fn_params_list: fn_params_list . COMMA INT bracketed_identifier

    RBRACKET  shift, and go to state 63
    COMMA     shift, and go to state 64


State 24

   14 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 14 (init_declarator_list)


State 25

   28 primary_expression: LBRACKET . expression RBRACKET
   52 cast_expression: LBRACKET . type_name RBRACKET cast_expression

    DOUBLE          shift, and go to state 65
    INT             shift, and go to state 66
    CHAR            shift, and go to state 67
    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    type_name                  go to state 68
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 70


State 26

   21 initializer: LCURLY . initializer_list RCURLY
   22            | LCURLY . initializer_list COMMA RCURLY

    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 26
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    initializer                go to state 71
    initializer_list           go to state 72
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59


State 27

   40 unary_expression: PLUS_PLUS . unary_expression

    LBRACKET        shift, and go to state 73
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT            go to state 41
    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 74
    UNARY_OPERATOR      go to state 46


State 28

   41 unary_expression: MINUS_MINUS . unary_expression

    LBRACKET        shift, and go to state 73
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT            go to state 41
    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 75
    UNARY_OPERATOR      go to state 46


State 29

   43 unary_expression: SIZEOF . unary_expression
   44                 | SIZEOF . LBRACKET INT RBRACKET

    LBRACKET        shift, and go to state 76
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT            go to state 41
    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 77
    UNARY_OPERATOR      go to state 46


State 30

   45 UNARY_OPERATOR: BITWISE_AND .

    $default  reduce using rule 45 (UNARY_OPERATOR)


State 31

   46 UNARY_OPERATOR: MULT .

    $default  reduce using rule 46 (UNARY_OPERATOR)


State 32

   47 UNARY_OPERATOR: PLUS .

    $default  reduce using rule 47 (UNARY_OPERATOR)


State 33

   48 UNARY_OPERATOR: MINUS .

    $default  reduce using rule 48 (UNARY_OPERATOR)


State 34

   49 UNARY_OPERATOR: WAVE .

    $default  reduce using rule 49 (UNARY_OPERATOR)


State 35

   50 UNARY_OPERATOR: EXL_MARK .

    $default  reduce using rule 50 (UNARY_OPERATOR)


State 36

    6 CONSTANT: INTEGER_CONST .

    $default  reduce using rule 6 (CONSTANT)


State 37

    5 CONSTANT: FLOATING_CONST .

    $default  reduce using rule 5 (CONSTANT)


State 38

    7 CONSTANT: CHAR_CONST .

    $default  reduce using rule 7 (CONSTANT)


State 39

   25 primary_expression: IDENTIFIER .

    $default  reduce using rule 25 (primary_expression)


State 40

   27 primary_expression: STRING_LITERAL .

    $default  reduce using rule 27 (primary_expression)


State 41

   26 primary_expression: CONSTANT .

    $default  reduce using rule 26 (primary_expression)


State 42

   16 init_declarator: declarator EQUALS initializer .

    $default  reduce using rule 16 (init_declarator)


State 43

   29 postfix_expression: primary_expression .

    $default  reduce using rule 29 (postfix_expression)


State 44

   30 postfix_expression: postfix_expression . LSQUARE expression RSQUARE
   31                   | postfix_expression . LBRACKET argument_expression_list RBRACKET
   32                   | postfix_expression . LBRACKET RBRACKET
   33                   | postfix_expression . DOT IDENTIFIER
   34                   | postfix_expression . PTR_OP IDENTIFIER
   35                   | postfix_expression . PLUS_PLUS
   36                   | postfix_expression . MINUS_MINUS
   39 unary_expression: postfix_expression .

    LSQUARE      shift, and go to state 78
    LBRACKET     shift, and go to state 79
    DOT          shift, and go to state 80
    PTR_OP       shift, and go to state 81
    PLUS_PLUS    shift, and go to state 82
    MINUS_MINUS  shift, and go to state 83

    $default  reduce using rule 39 (unary_expression)


State 45

   51 cast_expression: unary_expression .
   84 assignment_expression: unary_expression . ASSIGNMENT_OPERATOR assignment_expression

    MULT_EQUALS     shift, and go to state 84
    DIV_EQUALS      shift, and go to state 85
    PERCENT_EQUALS  shift, and go to state 86
    PLUS_EQUALS     shift, and go to state 87
    MINUS_EQUALS    shift, and go to state 88
    LSHIFT_EQUALS   shift, and go to state 89
    RSHIFT_EQUALS   shift, and go to state 90
    AND_EQUALS      shift, and go to state 91
    XOR_EQUALS      shift, and go to state 92
    OR_EQUALS       shift, and go to state 93
    EQUALS          shift, and go to state 94

    $default  reduce using rule 51 (cast_expression)

    ASSIGNMENT_OPERATOR  go to state 95


State 46

   42 unary_expression: UNARY_OPERATOR . cast_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT            go to state 41
    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 96
    UNARY_OPERATOR      go to state 46
    cast_expression     go to state 97


State 47

   53 multiplicative_expression: cast_expression .

    $default  reduce using rule 53 (multiplicative_expression)


State 48

   54 multiplicative_expression: multiplicative_expression . MULT cast_expression
   55                          | multiplicative_expression . DIV cast_expression
   56                          | multiplicative_expression . PERCENT cast_expression
   57 additive_expression: multiplicative_expression .

    MULT     shift, and go to state 98
    DIV      shift, and go to state 99
    PERCENT  shift, and go to state 100

    $default  reduce using rule 57 (additive_expression)


State 49

   58 additive_expression: additive_expression . PLUS multiplicative_expression
   59                    | additive_expression . MINUS multiplicative_expression
   60 shift_expression: additive_expression .

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102

    $default  reduce using rule 60 (shift_expression)


State 50

   61 shift_expression: shift_expression . LSHIFT additive_expression
   62                 | shift_expression . RSHIFT additive_expression
   63 relational_expression: shift_expression .

    LSHIFT  shift, and go to state 103
    RSHIFT  shift, and go to state 104

    $default  reduce using rule 63 (relational_expression)


State 51

   64 relational_expression: relational_expression . LOGICAL_LESS shift_expression
   65                      | relational_expression . LOGICAL_MORE shift_expression
   66                      | relational_expression . LESS_OR_EQUAL shift_expression
   67                      | relational_expression . MORE_OR_EQUAL shift_expression
   68 equality_expression: relational_expression .

    LESS_OR_EQUAL  shift, and go to state 105
    MORE_OR_EQUAL  shift, and go to state 106
    LOGICAL_MORE   shift, and go to state 107
    LOGICAL_LESS   shift, and go to state 108

    $default  reduce using rule 68 (equality_expression)


State 52

   69 equality_expression: equality_expression . LOGICAL_EQUALITY relational_expression
   70                    | equality_expression . LOGICAL_INEQUALITY relational_expression
   71 and_expression: equality_expression .

    LOGICAL_EQUALITY    shift, and go to state 109
    LOGICAL_INEQUALITY  shift, and go to state 110

    $default  reduce using rule 71 (and_expression)


State 53

   72 and_expression: and_expression . BITWISE_AND equality_expression
   73 exclusive_or_expression: and_expression .

    BITWISE_AND  shift, and go to state 111

    $default  reduce using rule 73 (exclusive_or_expression)


State 54

   74 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   75 inclusive_or_expression: exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 112

    $default  reduce using rule 75 (inclusive_or_expression)


State 55

   76 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   77 logical_and_expression: inclusive_or_expression .

    BITWISE_OR  shift, and go to state 113

    $default  reduce using rule 77 (logical_and_expression)


State 56

   78 logical_and_expression: logical_and_expression . LOGICAL_AND inclusive_or_expression
   79 logical_or_expression: logical_and_expression .

    LOGICAL_AND  shift, and go to state 114

    $default  reduce using rule 79 (logical_or_expression)


State 57

   80 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression
   81 conditional_expression: logical_or_expression .
   82                       | logical_or_expression . Q_MARK expression COLON conditional_expression

    LOGICAL_OR  shift, and go to state 115
    Q_MARK      shift, and go to state 116

    $default  reduce using rule 81 (conditional_expression)


State 58

   83 assignment_expression: conditional_expression .

    $default  reduce using rule 83 (assignment_expression)


State 59

   20 initializer: assignment_expression .

    $default  reduce using rule 20 (initializer)


State 60

  104 bracketed_identifier: LBRACKET . bracketed_identifier RBRACKET

    LBRACKET    shift, and go to state 60
    IDENTIFIER  shift, and go to state 61

    bracketed_identifier  go to state 117


State 61

  103 bracketed_identifier: IDENTIFIER .

    $default  reduce using rule 103 (bracketed_identifier)


State 62

  100 fn_params_list: INT bracketed_identifier .

    $default  reduce using rule 100 (fn_params_list)


State 63

   99 fn_declaration: INT IDENTIFIER LBRACKET fn_params_list RBRACKET . compound_statement

    LCURLY  shift, and go to state 118

    compound_statement  go to state 119


State 64

  101 fn_params_list: fn_params_list COMMA . INT bracketed_identifier

    INT  shift, and go to state 120


State 65

    9 type_name: DOUBLE .

    $default  reduce using rule 9 (type_name)


State 66

    8 type_name: INT .

    $default  reduce using rule 8 (type_name)


State 67

   10 type_name: CHAR .

    $default  reduce using rule 10 (type_name)


State 68

   52 cast_expression: LBRACKET type_name . RBRACKET cast_expression

    RBRACKET  shift, and go to state 121


State 69

   96 expression: assignment_expression .

    $default  reduce using rule 96 (expression)


State 70

   28 primary_expression: LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 122


State 71

   23 initializer_list: initializer .

    $default  reduce using rule 23 (initializer_list)


State 72

   21 initializer: LCURLY initializer_list . RCURLY
   22            | LCURLY initializer_list . COMMA RCURLY
   24 initializer_list: initializer_list . COMMA initializer

    RCURLY  shift, and go to state 123
    COMMA   shift, and go to state 124


State 73

   28 primary_expression: LBRACKET . expression RBRACKET

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 70


State 74

   40 unary_expression: PLUS_PLUS unary_expression .

    $default  reduce using rule 40 (unary_expression)


State 75

   41 unary_expression: MINUS_MINUS unary_expression .

    $default  reduce using rule 41 (unary_expression)


State 76

   28 primary_expression: LBRACKET . expression RBRACKET
   44 unary_expression: SIZEOF LBRACKET . INT RBRACKET

    INT             shift, and go to state 125
    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 70


State 77

   43 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 43 (unary_expression)


State 78

   30 postfix_expression: postfix_expression LSQUARE . expression RSQUARE

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 126


State 79

   31 postfix_expression: postfix_expression LBRACKET . argument_expression_list RBRACKET
   32                   | postfix_expression LBRACKET . RBRACKET

    LBRACKET        shift, and go to state 25
    RBRACKET        shift, and go to state 127
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    argument_expression_list   go to state 128
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 129


State 80

   33 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 130


State 81

   34 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 131


State 82

   35 postfix_expression: postfix_expression PLUS_PLUS .

    $default  reduce using rule 35 (postfix_expression)


State 83

   36 postfix_expression: postfix_expression MINUS_MINUS .

    $default  reduce using rule 36 (postfix_expression)


State 84

   86 ASSIGNMENT_OPERATOR: MULT_EQUALS .

    $default  reduce using rule 86 (ASSIGNMENT_OPERATOR)


State 85

   87 ASSIGNMENT_OPERATOR: DIV_EQUALS .

    $default  reduce using rule 87 (ASSIGNMENT_OPERATOR)


State 86

   88 ASSIGNMENT_OPERATOR: PERCENT_EQUALS .

    $default  reduce using rule 88 (ASSIGNMENT_OPERATOR)


State 87

   89 ASSIGNMENT_OPERATOR: PLUS_EQUALS .

    $default  reduce using rule 89 (ASSIGNMENT_OPERATOR)


State 88

   90 ASSIGNMENT_OPERATOR: MINUS_EQUALS .

    $default  reduce using rule 90 (ASSIGNMENT_OPERATOR)


State 89

   91 ASSIGNMENT_OPERATOR: LSHIFT_EQUALS .

    $default  reduce using rule 91 (ASSIGNMENT_OPERATOR)


State 90

   92 ASSIGNMENT_OPERATOR: RSHIFT_EQUALS .

    $default  reduce using rule 92 (ASSIGNMENT_OPERATOR)


State 91

   93 ASSIGNMENT_OPERATOR: AND_EQUALS .

    $default  reduce using rule 93 (ASSIGNMENT_OPERATOR)


State 92

   94 ASSIGNMENT_OPERATOR: XOR_EQUALS .

    $default  reduce using rule 94 (ASSIGNMENT_OPERATOR)


State 93

   95 ASSIGNMENT_OPERATOR: OR_EQUALS .

    $default  reduce using rule 95 (ASSIGNMENT_OPERATOR)


State 94

   85 ASSIGNMENT_OPERATOR: EQUALS .

    $default  reduce using rule 85 (ASSIGNMENT_OPERATOR)


State 95

   84 assignment_expression: unary_expression ASSIGNMENT_OPERATOR . assignment_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 132


State 96

   51 cast_expression: unary_expression .

    $default  reduce using rule 51 (cast_expression)


State 97

   42 unary_expression: UNARY_OPERATOR cast_expression .

    $default  reduce using rule 42 (unary_expression)


State 98

   54 multiplicative_expression: multiplicative_expression MULT . cast_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT            go to state 41
    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 96
    UNARY_OPERATOR      go to state 46
    cast_expression     go to state 133


State 99

   55 multiplicative_expression: multiplicative_expression DIV . cast_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT            go to state 41
    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 96
    UNARY_OPERATOR      go to state 46
    cast_expression     go to state 134


State 100

   56 multiplicative_expression: multiplicative_expression PERCENT . cast_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT            go to state 41
    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 96
    UNARY_OPERATOR      go to state 46
    cast_expression     go to state 135


State 101

   58 additive_expression: additive_expression PLUS . multiplicative_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 136


State 102

   59 additive_expression: additive_expression MINUS . multiplicative_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 137


State 103

   61 shift_expression: shift_expression LSHIFT . additive_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 138


State 104

   62 shift_expression: shift_expression RSHIFT . additive_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 139


State 105

   66 relational_expression: relational_expression LESS_OR_EQUAL . shift_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 140


State 106

   67 relational_expression: relational_expression MORE_OR_EQUAL . shift_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 141


State 107

   65 relational_expression: relational_expression LOGICAL_MORE . shift_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 142


State 108

   64 relational_expression: relational_expression LOGICAL_LESS . shift_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 143


State 109

   69 equality_expression: equality_expression LOGICAL_EQUALITY . relational_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 144


State 110

   70 equality_expression: equality_expression LOGICAL_INEQUALITY . relational_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 145


State 111

   72 and_expression: and_expression BITWISE_AND . equality_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 146


State 112

   74 exclusive_or_expression: exclusive_or_expression BITWISE_XOR . and_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 147


State 113

   76 inclusive_or_expression: inclusive_or_expression BITWISE_OR . exclusive_or_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 148


State 114

   78 logical_and_expression: logical_and_expression LOGICAL_AND . inclusive_or_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 149


State 115

   80 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 150


State 116

   82 conditional_expression: logical_or_expression Q_MARK . expression COLON conditional_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 151


State 117

  104 bracketed_identifier: LBRACKET bracketed_identifier . RBRACKET

    RBRACKET  shift, and go to state 152


State 118

  130 compound_statement: LCURLY . declaration_list statement_list RCURLY
  131                   | LCURLY . statement_list RCURLY
  132                   | LCURLY . declaration_list RCURLY
  133                   | LCURLY . RCURLY

    INT             shift, and go to state 153
    RETURN          shift, and go to state 154
    FOR             shift, and go to state 155
    DO              shift, and go to state 156
    IF              shift, and go to state 157
    WHILE           shift, and go to state 158
    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 118
    RCURLY          shift, and go to state 159
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 160
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    declaration                go to state 161
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 163
    loop                       go to state 164
    do_while_loop              go to state 165
    for_loop                   go to state 166
    while_loop                 go to state 167
    if_block_statement         go to state 168
    if_statement               go to state 169
    compound_statement         go to state 170
    declaration_list           go to state 171
    statement_list             go to state 172
    statement                  go to state 173
    expression_statement       go to state 174
    semi_colon_statement       go to state 175
    return_statement           go to state 176


State 119

   99 fn_declaration: INT IDENTIFIER LBRACKET fn_params_list RBRACKET compound_statement .

    $default  reduce using rule 99 (fn_declaration)


State 120

  101 fn_params_list: fn_params_list COMMA INT . bracketed_identifier

    LBRACKET    shift, and go to state 60
    IDENTIFIER  shift, and go to state 61

    bracketed_identifier  go to state 177


State 121

   52 cast_expression: LBRACKET type_name RBRACKET . cast_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT            go to state 41
    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 96
    UNARY_OPERATOR      go to state 46
    cast_expression     go to state 178


State 122

   28 primary_expression: LBRACKET expression RBRACKET .

    $default  reduce using rule 28 (primary_expression)


State 123

   21 initializer: LCURLY initializer_list RCURLY .

    $default  reduce using rule 21 (initializer)


State 124

   22 initializer: LCURLY initializer_list COMMA . RCURLY
   24 initializer_list: initializer_list COMMA . initializer

    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 26
    RCURLY          shift, and go to state 179
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    initializer                go to state 180
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 59


State 125

   44 unary_expression: SIZEOF LBRACKET INT . RBRACKET

    RBRACKET  shift, and go to state 181


State 126

   30 postfix_expression: postfix_expression LSQUARE expression . RSQUARE

    RSQUARE  shift, and go to state 182


State 127

   32 postfix_expression: postfix_expression LBRACKET RBRACKET .

    $default  reduce using rule 32 (postfix_expression)


State 128

   31 postfix_expression: postfix_expression LBRACKET argument_expression_list . RBRACKET
   38 argument_expression_list: argument_expression_list . COMMA assignment_expression

    RBRACKET  shift, and go to state 183
    COMMA     shift, and go to state 184


State 129

   37 argument_expression_list: assignment_expression .

    $default  reduce using rule 37 (argument_expression_list)


State 130

   33 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 33 (postfix_expression)


State 131

   34 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 34 (postfix_expression)


State 132

   84 assignment_expression: unary_expression ASSIGNMENT_OPERATOR assignment_expression .

    $default  reduce using rule 84 (assignment_expression)


State 133

   54 multiplicative_expression: multiplicative_expression MULT cast_expression .

    $default  reduce using rule 54 (multiplicative_expression)


State 134

   55 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 55 (multiplicative_expression)


State 135

   56 multiplicative_expression: multiplicative_expression PERCENT cast_expression .

    $default  reduce using rule 56 (multiplicative_expression)


State 136

   54 multiplicative_expression: multiplicative_expression . MULT cast_expression
   55                          | multiplicative_expression . DIV cast_expression
   56                          | multiplicative_expression . PERCENT cast_expression
   58 additive_expression: additive_expression PLUS multiplicative_expression .

    MULT     shift, and go to state 98
    DIV      shift, and go to state 99
    PERCENT  shift, and go to state 100

    $default  reduce using rule 58 (additive_expression)


State 137

   54 multiplicative_expression: multiplicative_expression . MULT cast_expression
   55                          | multiplicative_expression . DIV cast_expression
   56                          | multiplicative_expression . PERCENT cast_expression
   59 additive_expression: additive_expression MINUS multiplicative_expression .

    MULT     shift, and go to state 98
    DIV      shift, and go to state 99
    PERCENT  shift, and go to state 100

    $default  reduce using rule 59 (additive_expression)


State 138

   58 additive_expression: additive_expression . PLUS multiplicative_expression
   59                    | additive_expression . MINUS multiplicative_expression
   61 shift_expression: shift_expression LSHIFT additive_expression .

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102

    $default  reduce using rule 61 (shift_expression)


State 139

   58 additive_expression: additive_expression . PLUS multiplicative_expression
   59                    | additive_expression . MINUS multiplicative_expression
   62 shift_expression: shift_expression RSHIFT additive_expression .

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102

    $default  reduce using rule 62 (shift_expression)


State 140

   61 shift_expression: shift_expression . LSHIFT additive_expression
   62                 | shift_expression . RSHIFT additive_expression
   66 relational_expression: relational_expression LESS_OR_EQUAL shift_expression .

    LSHIFT  shift, and go to state 103
    RSHIFT  shift, and go to state 104

    $default  reduce using rule 66 (relational_expression)


State 141

   61 shift_expression: shift_expression . LSHIFT additive_expression
   62                 | shift_expression . RSHIFT additive_expression
   67 relational_expression: relational_expression MORE_OR_EQUAL shift_expression .

    LSHIFT  shift, and go to state 103
    RSHIFT  shift, and go to state 104

    $default  reduce using rule 67 (relational_expression)


State 142

   61 shift_expression: shift_expression . LSHIFT additive_expression
   62                 | shift_expression . RSHIFT additive_expression
   65 relational_expression: relational_expression LOGICAL_MORE shift_expression .

    LSHIFT  shift, and go to state 103
    RSHIFT  shift, and go to state 104

    $default  reduce using rule 65 (relational_expression)


State 143

   61 shift_expression: shift_expression . LSHIFT additive_expression
   62                 | shift_expression . RSHIFT additive_expression
   64 relational_expression: relational_expression LOGICAL_LESS shift_expression .

    LSHIFT  shift, and go to state 103
    RSHIFT  shift, and go to state 104

    $default  reduce using rule 64 (relational_expression)


State 144

   64 relational_expression: relational_expression . LOGICAL_LESS shift_expression
   65                      | relational_expression . LOGICAL_MORE shift_expression
   66                      | relational_expression . LESS_OR_EQUAL shift_expression
   67                      | relational_expression . MORE_OR_EQUAL shift_expression
   69 equality_expression: equality_expression LOGICAL_EQUALITY relational_expression .

    LESS_OR_EQUAL  shift, and go to state 105
    MORE_OR_EQUAL  shift, and go to state 106
    LOGICAL_MORE   shift, and go to state 107
    LOGICAL_LESS   shift, and go to state 108

    $default  reduce using rule 69 (equality_expression)


State 145

   64 relational_expression: relational_expression . LOGICAL_LESS shift_expression
   65                      | relational_expression . LOGICAL_MORE shift_expression
   66                      | relational_expression . LESS_OR_EQUAL shift_expression
   67                      | relational_expression . MORE_OR_EQUAL shift_expression
   70 equality_expression: equality_expression LOGICAL_INEQUALITY relational_expression .

    LESS_OR_EQUAL  shift, and go to state 105
    MORE_OR_EQUAL  shift, and go to state 106
    LOGICAL_MORE   shift, and go to state 107
    LOGICAL_LESS   shift, and go to state 108

    $default  reduce using rule 70 (equality_expression)


State 146

   69 equality_expression: equality_expression . LOGICAL_EQUALITY relational_expression
   70                    | equality_expression . LOGICAL_INEQUALITY relational_expression
   72 and_expression: and_expression BITWISE_AND equality_expression .

    LOGICAL_EQUALITY    shift, and go to state 109
    LOGICAL_INEQUALITY  shift, and go to state 110

    $default  reduce using rule 72 (and_expression)


State 147

   72 and_expression: and_expression . BITWISE_AND equality_expression
   74 exclusive_or_expression: exclusive_or_expression BITWISE_XOR and_expression .

    BITWISE_AND  shift, and go to state 111

    $default  reduce using rule 74 (exclusive_or_expression)


State 148

   74 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   76 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 112

    $default  reduce using rule 76 (inclusive_or_expression)


State 149

   76 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   78 logical_and_expression: logical_and_expression LOGICAL_AND inclusive_or_expression .

    BITWISE_OR  shift, and go to state 113

    $default  reduce using rule 78 (logical_and_expression)


State 150

   78 logical_and_expression: logical_and_expression . LOGICAL_AND inclusive_or_expression
   80 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .

    LOGICAL_AND  shift, and go to state 114

    $default  reduce using rule 80 (logical_or_expression)


State 151

   82 conditional_expression: logical_or_expression Q_MARK expression . COLON conditional_expression

    COLON  shift, and go to state 185


State 152

  104 bracketed_identifier: LBRACKET bracketed_identifier RBRACKET .

    $default  reduce using rule 104 (bracketed_identifier)


State 153

   11 declaration: INT . init_declarator_list SEMI_COLON
   12            | INT . SEMI_COLON

    LBRACKET    shift, and go to state 5
    SEMI_COLON  shift, and go to state 6
    IDENTIFIER  shift, and go to state 15

    init_declarator_list  go to state 8
    init_declarator       go to state 9
    declarator            go to state 10
    direct_declarator     go to state 11


State 154

  146 return_statement: RETURN . expression SEMI_COLON
  147                 | RETURN . SEMI_COLON

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 186
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 187


State 155

  110 for_loop: FOR . LBRACKET for_loop_decl_statement RBRACKET compound_statement
  111         | FOR . LBRACKET for_loop_decl_statement RBRACKET statement

    LBRACKET  shift, and go to state 188


State 156

  108 do_while_loop: DO . compound_statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON
  109              | DO . statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON

    RETURN          shift, and go to state 154
    FOR             shift, and go to state 155
    DO              shift, and go to state 156
    IF              shift, and go to state 157
    WHILE           shift, and go to state 158
    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 118
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 160
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 163
    loop                       go to state 164
    do_while_loop              go to state 165
    for_loop                   go to state 166
    while_loop                 go to state 167
    if_block_statement         go to state 168
    if_statement               go to state 169
    compound_statement         go to state 189
    statement                  go to state 190
    expression_statement       go to state 174
    semi_colon_statement       go to state 175
    return_statement           go to state 176


State 157

  126 if_statement: IF . LBRACKET expression_list RBRACKET compound_statement
  127             | IF . LBRACKET expression_list RBRACKET statement

    LBRACKET  shift, and go to state 191


State 158

  120 while_loop: WHILE . LBRACKET expression_list RBRACKET compound_statement
  121           | WHILE . LBRACKET expression_list RBRACKET statement

    LBRACKET  shift, and go to state 192


State 159

  133 compound_statement: LCURLY RCURLY .

    $default  reduce using rule 133 (compound_statement)


State 160

  145 semi_colon_statement: SEMI_COLON .

    $default  reduce using rule 145 (semi_colon_statement)


State 161

  134 declaration_list: declaration .

    $default  reduce using rule 134 (declaration_list)


State 162

   97 expression_list: expression .

    $default  reduce using rule 97 (expression_list)


State 163

   98 expression_list: expression_list . COMMA expression
  143 expression_statement: expression_list . SEMI_COLON

    COMMA       shift, and go to state 193
    SEMI_COLON  shift, and go to state 194


State 164

  138 statement: loop .

    $default  reduce using rule 138 (statement)


State 165

  107 loop: do_while_loop .

    $default  reduce using rule 107 (loop)


State 166

  105 loop: for_loop .

    $default  reduce using rule 105 (loop)


State 167

  106 loop: while_loop .

    $default  reduce using rule 106 (loop)


State 168

  139 statement: if_block_statement .

    $default  reduce using rule 139 (statement)


State 169

  122 if_block_statement: if_statement .
  123                   | if_statement . else_statement_list

    ELSE  shift, and go to state 195

    ELSE      [reduce using rule 122 (if_block_statement)]
    $default  reduce using rule 122 (if_block_statement)

    else_statement_list  go to state 196
    else_statement       go to state 197


State 170

  142 statement: compound_statement .

    $default  reduce using rule 142 (statement)


State 171

  130 compound_statement: LCURLY declaration_list . statement_list RCURLY
  132                   | LCURLY declaration_list . RCURLY
  135 declaration_list: declaration_list . declaration

    INT             shift, and go to state 153
    RETURN          shift, and go to state 154
    FOR             shift, and go to state 155
    DO              shift, and go to state 156
    IF              shift, and go to state 157
    WHILE           shift, and go to state 158
    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 118
    RCURLY          shift, and go to state 198
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 160
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    declaration                go to state 199
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 163
    loop                       go to state 164
    do_while_loop              go to state 165
    for_loop                   go to state 166
    while_loop                 go to state 167
    if_block_statement         go to state 168
    if_statement               go to state 169
    compound_statement         go to state 170
    statement_list             go to state 200
    statement                  go to state 173
    expression_statement       go to state 174
    semi_colon_statement       go to state 175
    return_statement           go to state 176


State 172

  131 compound_statement: LCURLY statement_list . RCURLY
  137 statement_list: statement_list . statement

    RETURN          shift, and go to state 154
    FOR             shift, and go to state 155
    DO              shift, and go to state 156
    IF              shift, and go to state 157
    WHILE           shift, and go to state 158
    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 118
    RCURLY          shift, and go to state 201
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 160
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 163
    loop                       go to state 164
    do_while_loop              go to state 165
    for_loop                   go to state 166
    while_loop                 go to state 167
    if_block_statement         go to state 168
    if_statement               go to state 169
    compound_statement         go to state 170
    statement                  go to state 202
    expression_statement       go to state 174
    semi_colon_statement       go to state 175
    return_statement           go to state 176


State 173

  136 statement_list: statement .

    $default  reduce using rule 136 (statement_list)


State 174

  140 statement: expression_statement .

    $default  reduce using rule 140 (statement)


State 175

  141 statement: semi_colon_statement .

    $default  reduce using rule 141 (statement)


State 176

  144 semi_colon_statement: return_statement .

    $default  reduce using rule 144 (semi_colon_statement)


State 177

  101 fn_params_list: fn_params_list COMMA INT bracketed_identifier .

    $default  reduce using rule 101 (fn_params_list)


State 178

   52 cast_expression: LBRACKET type_name RBRACKET cast_expression .

    $default  reduce using rule 52 (cast_expression)


State 179

   22 initializer: LCURLY initializer_list COMMA RCURLY .

    $default  reduce using rule 22 (initializer)


State 180

   24 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 24 (initializer_list)


State 181

   44 unary_expression: SIZEOF LBRACKET INT RBRACKET .

    $default  reduce using rule 44 (unary_expression)


State 182

   30 postfix_expression: postfix_expression LSQUARE expression RSQUARE .

    $default  reduce using rule 30 (postfix_expression)


State 183

   31 postfix_expression: postfix_expression LBRACKET argument_expression_list RBRACKET .

    $default  reduce using rule 31 (postfix_expression)


State 184

   38 argument_expression_list: argument_expression_list COMMA . assignment_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 203


State 185

   82 conditional_expression: logical_or_expression Q_MARK expression COLON . conditional_expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 96
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 204


State 186

  147 return_statement: RETURN SEMI_COLON .

    $default  reduce using rule 147 (return_statement)


State 187

  146 return_statement: RETURN expression . SEMI_COLON

    SEMI_COLON  shift, and go to state 205


State 188

  110 for_loop: FOR LBRACKET . for_loop_decl_statement RBRACKET compound_statement
  111         | FOR LBRACKET . for_loop_decl_statement RBRACKET statement

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 206
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 207
    for_loop_decl_statement    go to state 208


State 189

  108 do_while_loop: DO compound_statement . WHILE LBRACKET expression_list RBRACKET SEMI_COLON
  142 statement: compound_statement .

    WHILE  shift, and go to state 209

    WHILE  [reduce using rule 142 (statement)]


State 190

  109 do_while_loop: DO statement . WHILE LBRACKET expression_list RBRACKET SEMI_COLON

    WHILE  shift, and go to state 210


State 191

  126 if_statement: IF LBRACKET . expression_list RBRACKET compound_statement
  127             | IF LBRACKET . expression_list RBRACKET statement

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 211


State 192

  120 while_loop: WHILE LBRACKET . expression_list RBRACKET compound_statement
  121           | WHILE LBRACKET . expression_list RBRACKET statement

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 212


State 193

   98 expression_list: expression_list COMMA . expression

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 213


State 194

  143 expression_statement: expression_list SEMI_COLON .

    $default  reduce using rule 143 (expression_statement)


State 195

  128 else_statement: ELSE . compound_statement
  129               | ELSE . statement

    RETURN          shift, and go to state 154
    FOR             shift, and go to state 155
    DO              shift, and go to state 156
    IF              shift, and go to state 157
    WHILE           shift, and go to state 158
    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 118
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 160
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 163
    loop                       go to state 164
    do_while_loop              go to state 165
    for_loop                   go to state 166
    while_loop                 go to state 167
    if_block_statement         go to state 168
    if_statement               go to state 169
    compound_statement         go to state 214
    statement                  go to state 215
    expression_statement       go to state 174
    semi_colon_statement       go to state 175
    return_statement           go to state 176


State 196

  123 if_block_statement: if_statement else_statement_list .
  125 else_statement_list: else_statement_list . else_statement

    ELSE  shift, and go to state 195

    ELSE      [reduce using rule 123 (if_block_statement)]
    $default  reduce using rule 123 (if_block_statement)

    else_statement  go to state 216


State 197

  124 else_statement_list: else_statement .

    $default  reduce using rule 124 (else_statement_list)


State 198

  132 compound_statement: LCURLY declaration_list RCURLY .

    $default  reduce using rule 132 (compound_statement)


State 199

  135 declaration_list: declaration_list declaration .

    $default  reduce using rule 135 (declaration_list)


State 200

  130 compound_statement: LCURLY declaration_list statement_list . RCURLY
  137 statement_list: statement_list . statement

    RETURN          shift, and go to state 154
    FOR             shift, and go to state 155
    DO              shift, and go to state 156
    IF              shift, and go to state 157
    WHILE           shift, and go to state 158
    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 118
    RCURLY          shift, and go to state 217
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 160
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 163
    loop                       go to state 164
    do_while_loop              go to state 165
    for_loop                   go to state 166
    while_loop                 go to state 167
    if_block_statement         go to state 168
    if_statement               go to state 169
    compound_statement         go to state 170
    statement                  go to state 202
    expression_statement       go to state 174
    semi_colon_statement       go to state 175
    return_statement           go to state 176


State 201

  131 compound_statement: LCURLY statement_list RCURLY .

    $default  reduce using rule 131 (compound_statement)


State 202

  137 statement_list: statement_list statement .

    $default  reduce using rule 137 (statement_list)


State 203

   38 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 38 (argument_expression_list)


State 204

   82 conditional_expression: logical_or_expression Q_MARK expression COLON conditional_expression .

    $default  reduce using rule 82 (conditional_expression)


State 205

  146 return_statement: RETURN expression SEMI_COLON .

    $default  reduce using rule 146 (return_statement)


State 206

  115 for_loop_decl_statement: SEMI_COLON . expression_list SEMI_COLON expression_list
  117                        | SEMI_COLON . SEMI_COLON expression_list
  118                        | SEMI_COLON . expression_list SEMI_COLON
  119                        | SEMI_COLON . SEMI_COLON

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 218
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 219


State 207

   98 expression_list: expression_list . COMMA expression
  112 for_loop_decl_statement: expression_list . SEMI_COLON expression_list SEMI_COLON expression_list
  113                        | expression_list . SEMI_COLON expression_list SEMI_COLON
  114                        | expression_list . SEMI_COLON SEMI_COLON expression_list
  116                        | expression_list . SEMI_COLON SEMI_COLON

    COMMA       shift, and go to state 193
    SEMI_COLON  shift, and go to state 220


State 208

  110 for_loop: FOR LBRACKET for_loop_decl_statement . RBRACKET compound_statement
  111         | FOR LBRACKET for_loop_decl_statement . RBRACKET statement

    RBRACKET  shift, and go to state 221


State 209

  108 do_while_loop: DO compound_statement WHILE . LBRACKET expression_list RBRACKET SEMI_COLON

    LBRACKET  shift, and go to state 222


State 210

  109 do_while_loop: DO statement WHILE . LBRACKET expression_list RBRACKET SEMI_COLON

    LBRACKET  shift, and go to state 223


State 211

   98 expression_list: expression_list . COMMA expression
  126 if_statement: IF LBRACKET expression_list . RBRACKET compound_statement
  127             | IF LBRACKET expression_list . RBRACKET statement

    RBRACKET  shift, and go to state 224
    COMMA     shift, and go to state 193


State 212

   98 expression_list: expression_list . COMMA expression
  120 while_loop: WHILE LBRACKET expression_list . RBRACKET compound_statement
  121           | WHILE LBRACKET expression_list . RBRACKET statement

    RBRACKET  shift, and go to state 225
    COMMA     shift, and go to state 193


State 213

   98 expression_list: expression_list COMMA expression .

    $default  reduce using rule 98 (expression_list)


State 214

  128 else_statement: ELSE compound_statement .
  142 statement: compound_statement .

    ELSE            reduce using rule 128 (else_statement)
    ELSE            [reduce using rule 142 (statement)]
    RETURN          reduce using rule 128 (else_statement)
    RETURN          [reduce using rule 142 (statement)]
    FOR             reduce using rule 128 (else_statement)
    FOR             [reduce using rule 142 (statement)]
    DO              reduce using rule 128 (else_statement)
    DO              [reduce using rule 142 (statement)]
    IF              reduce using rule 128 (else_statement)
    IF              [reduce using rule 142 (statement)]
    WHILE           reduce using rule 128 (else_statement)
    WHILE           [reduce using rule 142 (statement)]
    LBRACKET        reduce using rule 128 (else_statement)
    LBRACKET        [reduce using rule 142 (statement)]
    LCURLY          reduce using rule 128 (else_statement)
    LCURLY          [reduce using rule 142 (statement)]
    RCURLY          reduce using rule 128 (else_statement)
    RCURLY          [reduce using rule 142 (statement)]
    PLUS_PLUS       reduce using rule 128 (else_statement)
    PLUS_PLUS       [reduce using rule 142 (statement)]
    MINUS_MINUS     reduce using rule 128 (else_statement)
    MINUS_MINUS     [reduce using rule 142 (statement)]
    SIZEOF          reduce using rule 128 (else_statement)
    SIZEOF          [reduce using rule 142 (statement)]
    SEMI_COLON      reduce using rule 128 (else_statement)
    SEMI_COLON      [reduce using rule 142 (statement)]
    BITWISE_AND     reduce using rule 128 (else_statement)
    BITWISE_AND     [reduce using rule 142 (statement)]
    MULT            reduce using rule 128 (else_statement)
    MULT            [reduce using rule 142 (statement)]
    PLUS            reduce using rule 128 (else_statement)
    PLUS            [reduce using rule 142 (statement)]
    MINUS           reduce using rule 128 (else_statement)
    MINUS           [reduce using rule 142 (statement)]
    WAVE            reduce using rule 128 (else_statement)
    WAVE            [reduce using rule 142 (statement)]
    EXL_MARK        reduce using rule 128 (else_statement)
    EXL_MARK        [reduce using rule 142 (statement)]
    INTEGER_CONST   reduce using rule 128 (else_statement)
    INTEGER_CONST   [reduce using rule 142 (statement)]
    FLOATING_CONST  reduce using rule 128 (else_statement)
    FLOATING_CONST  [reduce using rule 142 (statement)]
    CHAR_CONST      reduce using rule 128 (else_statement)
    CHAR_CONST      [reduce using rule 142 (statement)]
    IDENTIFIER      reduce using rule 128 (else_statement)
    IDENTIFIER      [reduce using rule 142 (statement)]
    STRING_LITERAL  reduce using rule 128 (else_statement)
    STRING_LITERAL  [reduce using rule 142 (statement)]
    $default        reduce using rule 128 (else_statement)


State 215

  129 else_statement: ELSE statement .

    $default  reduce using rule 129 (else_statement)


State 216

  125 else_statement_list: else_statement_list else_statement .

    $default  reduce using rule 125 (else_statement_list)


State 217

  130 compound_statement: LCURLY declaration_list statement_list RCURLY .

    $default  reduce using rule 130 (compound_statement)


State 218

  117 for_loop_decl_statement: SEMI_COLON SEMI_COLON . expression_list
  119                        | SEMI_COLON SEMI_COLON .

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    $default  reduce using rule 119 (for_loop_decl_statement)

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 226


State 219

   98 expression_list: expression_list . COMMA expression
  115 for_loop_decl_statement: SEMI_COLON expression_list . SEMI_COLON expression_list
  118                        | SEMI_COLON expression_list . SEMI_COLON

    COMMA       shift, and go to state 193
    SEMI_COLON  shift, and go to state 227


State 220

  112 for_loop_decl_statement: expression_list SEMI_COLON . expression_list SEMI_COLON expression_list
  113                        | expression_list SEMI_COLON . expression_list SEMI_COLON
  114                        | expression_list SEMI_COLON . SEMI_COLON expression_list
  116                        | expression_list SEMI_COLON . SEMI_COLON

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 228
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 229


State 221

  110 for_loop: FOR LBRACKET for_loop_decl_statement RBRACKET . compound_statement
  111         | FOR LBRACKET for_loop_decl_statement RBRACKET . statement

    RETURN          shift, and go to state 154
    FOR             shift, and go to state 155
    DO              shift, and go to state 156
    IF              shift, and go to state 157
    WHILE           shift, and go to state 158
    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 118
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 160
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 163
    loop                       go to state 164
    do_while_loop              go to state 165
    for_loop                   go to state 166
    while_loop                 go to state 167
    if_block_statement         go to state 168
    if_statement               go to state 169
    compound_statement         go to state 230
    statement                  go to state 231
    expression_statement       go to state 174
    semi_colon_statement       go to state 175
    return_statement           go to state 176


State 222

  108 do_while_loop: DO compound_statement WHILE LBRACKET . expression_list RBRACKET SEMI_COLON

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 232


State 223

  109 do_while_loop: DO statement WHILE LBRACKET . expression_list RBRACKET SEMI_COLON

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 233


State 224

  126 if_statement: IF LBRACKET expression_list RBRACKET . compound_statement
  127             | IF LBRACKET expression_list RBRACKET . statement

    RETURN          shift, and go to state 154
    FOR             shift, and go to state 155
    DO              shift, and go to state 156
    IF              shift, and go to state 157
    WHILE           shift, and go to state 158
    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 118
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 160
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 163
    loop                       go to state 164
    do_while_loop              go to state 165
    for_loop                   go to state 166
    while_loop                 go to state 167
    if_block_statement         go to state 168
    if_statement               go to state 169
    compound_statement         go to state 234
    statement                  go to state 235
    expression_statement       go to state 174
    semi_colon_statement       go to state 175
    return_statement           go to state 176


State 225

  120 while_loop: WHILE LBRACKET expression_list RBRACKET . compound_statement
  121           | WHILE LBRACKET expression_list RBRACKET . statement

    RETURN          shift, and go to state 154
    FOR             shift, and go to state 155
    DO              shift, and go to state 156
    IF              shift, and go to state 157
    WHILE           shift, and go to state 158
    LBRACKET        shift, and go to state 25
    LCURLY          shift, and go to state 118
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    SEMI_COLON      shift, and go to state 160
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 163
    loop                       go to state 164
    do_while_loop              go to state 165
    for_loop                   go to state 166
    while_loop                 go to state 167
    if_block_statement         go to state 168
    if_statement               go to state 169
    compound_statement         go to state 236
    statement                  go to state 237
    expression_statement       go to state 174
    semi_colon_statement       go to state 175
    return_statement           go to state 176


State 226

   98 expression_list: expression_list . COMMA expression
  117 for_loop_decl_statement: SEMI_COLON SEMI_COLON expression_list .

    COMMA  shift, and go to state 193

    $default  reduce using rule 117 (for_loop_decl_statement)


State 227

  115 for_loop_decl_statement: SEMI_COLON expression_list SEMI_COLON . expression_list
  118                        | SEMI_COLON expression_list SEMI_COLON .

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    $default  reduce using rule 118 (for_loop_decl_statement)

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 238


State 228

  114 for_loop_decl_statement: expression_list SEMI_COLON SEMI_COLON . expression_list
  116                        | expression_list SEMI_COLON SEMI_COLON .

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    $default  reduce using rule 116 (for_loop_decl_statement)

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 239


State 229

   98 expression_list: expression_list . COMMA expression
  112 for_loop_decl_statement: expression_list SEMI_COLON expression_list . SEMI_COLON expression_list
  113                        | expression_list SEMI_COLON expression_list . SEMI_COLON

    COMMA       shift, and go to state 193
    SEMI_COLON  shift, and go to state 240


State 230

  110 for_loop: FOR LBRACKET for_loop_decl_statement RBRACKET compound_statement .
  142 statement: compound_statement .

    ELSE            reduce using rule 110 (for_loop)
    ELSE            [reduce using rule 142 (statement)]
    RETURN          reduce using rule 110 (for_loop)
    RETURN          [reduce using rule 142 (statement)]
    FOR             reduce using rule 110 (for_loop)
    FOR             [reduce using rule 142 (statement)]
    DO              reduce using rule 110 (for_loop)
    DO              [reduce using rule 142 (statement)]
    IF              reduce using rule 110 (for_loop)
    IF              [reduce using rule 142 (statement)]
    WHILE           reduce using rule 110 (for_loop)
    WHILE           [reduce using rule 142 (statement)]
    LBRACKET        reduce using rule 110 (for_loop)
    LBRACKET        [reduce using rule 142 (statement)]
    LCURLY          reduce using rule 110 (for_loop)
    LCURLY          [reduce using rule 142 (statement)]
    RCURLY          reduce using rule 110 (for_loop)
    RCURLY          [reduce using rule 142 (statement)]
    PLUS_PLUS       reduce using rule 110 (for_loop)
    PLUS_PLUS       [reduce using rule 142 (statement)]
    MINUS_MINUS     reduce using rule 110 (for_loop)
    MINUS_MINUS     [reduce using rule 142 (statement)]
    SIZEOF          reduce using rule 110 (for_loop)
    SIZEOF          [reduce using rule 142 (statement)]
    SEMI_COLON      reduce using rule 110 (for_loop)
    SEMI_COLON      [reduce using rule 142 (statement)]
    BITWISE_AND     reduce using rule 110 (for_loop)
    BITWISE_AND     [reduce using rule 142 (statement)]
    MULT            reduce using rule 110 (for_loop)
    MULT            [reduce using rule 142 (statement)]
    PLUS            reduce using rule 110 (for_loop)
    PLUS            [reduce using rule 142 (statement)]
    MINUS           reduce using rule 110 (for_loop)
    MINUS           [reduce using rule 142 (statement)]
    WAVE            reduce using rule 110 (for_loop)
    WAVE            [reduce using rule 142 (statement)]
    EXL_MARK        reduce using rule 110 (for_loop)
    EXL_MARK        [reduce using rule 142 (statement)]
    INTEGER_CONST   reduce using rule 110 (for_loop)
    INTEGER_CONST   [reduce using rule 142 (statement)]
    FLOATING_CONST  reduce using rule 110 (for_loop)
    FLOATING_CONST  [reduce using rule 142 (statement)]
    CHAR_CONST      reduce using rule 110 (for_loop)
    CHAR_CONST      [reduce using rule 142 (statement)]
    IDENTIFIER      reduce using rule 110 (for_loop)
    IDENTIFIER      [reduce using rule 142 (statement)]
    STRING_LITERAL  reduce using rule 110 (for_loop)
    STRING_LITERAL  [reduce using rule 142 (statement)]
    $default        reduce using rule 110 (for_loop)


State 231

  111 for_loop: FOR LBRACKET for_loop_decl_statement RBRACKET statement .

    $default  reduce using rule 111 (for_loop)


State 232

   98 expression_list: expression_list . COMMA expression
  108 do_while_loop: DO compound_statement WHILE LBRACKET expression_list . RBRACKET SEMI_COLON

    RBRACKET  shift, and go to state 241
    COMMA     shift, and go to state 193


State 233

   98 expression_list: expression_list . COMMA expression
  109 do_while_loop: DO statement WHILE LBRACKET expression_list . RBRACKET SEMI_COLON

    RBRACKET  shift, and go to state 242
    COMMA     shift, and go to state 193


State 234

  126 if_statement: IF LBRACKET expression_list RBRACKET compound_statement .
  142 statement: compound_statement .

    ELSE            reduce using rule 126 (if_statement)
    ELSE            [reduce using rule 142 (statement)]
    RETURN          reduce using rule 126 (if_statement)
    RETURN          [reduce using rule 142 (statement)]
    FOR             reduce using rule 126 (if_statement)
    FOR             [reduce using rule 142 (statement)]
    DO              reduce using rule 126 (if_statement)
    DO              [reduce using rule 142 (statement)]
    IF              reduce using rule 126 (if_statement)
    IF              [reduce using rule 142 (statement)]
    WHILE           reduce using rule 126 (if_statement)
    WHILE           [reduce using rule 142 (statement)]
    LBRACKET        reduce using rule 126 (if_statement)
    LBRACKET        [reduce using rule 142 (statement)]
    LCURLY          reduce using rule 126 (if_statement)
    LCURLY          [reduce using rule 142 (statement)]
    RCURLY          reduce using rule 126 (if_statement)
    RCURLY          [reduce using rule 142 (statement)]
    PLUS_PLUS       reduce using rule 126 (if_statement)
    PLUS_PLUS       [reduce using rule 142 (statement)]
    MINUS_MINUS     reduce using rule 126 (if_statement)
    MINUS_MINUS     [reduce using rule 142 (statement)]
    SIZEOF          reduce using rule 126 (if_statement)
    SIZEOF          [reduce using rule 142 (statement)]
    SEMI_COLON      reduce using rule 126 (if_statement)
    SEMI_COLON      [reduce using rule 142 (statement)]
    BITWISE_AND     reduce using rule 126 (if_statement)
    BITWISE_AND     [reduce using rule 142 (statement)]
    MULT            reduce using rule 126 (if_statement)
    MULT            [reduce using rule 142 (statement)]
    PLUS            reduce using rule 126 (if_statement)
    PLUS            [reduce using rule 142 (statement)]
    MINUS           reduce using rule 126 (if_statement)
    MINUS           [reduce using rule 142 (statement)]
    WAVE            reduce using rule 126 (if_statement)
    WAVE            [reduce using rule 142 (statement)]
    EXL_MARK        reduce using rule 126 (if_statement)
    EXL_MARK        [reduce using rule 142 (statement)]
    INTEGER_CONST   reduce using rule 126 (if_statement)
    INTEGER_CONST   [reduce using rule 142 (statement)]
    FLOATING_CONST  reduce using rule 126 (if_statement)
    FLOATING_CONST  [reduce using rule 142 (statement)]
    CHAR_CONST      reduce using rule 126 (if_statement)
    CHAR_CONST      [reduce using rule 142 (statement)]
    IDENTIFIER      reduce using rule 126 (if_statement)
    IDENTIFIER      [reduce using rule 142 (statement)]
    STRING_LITERAL  reduce using rule 126 (if_statement)
    STRING_LITERAL  [reduce using rule 142 (statement)]
    $default        reduce using rule 126 (if_statement)


State 235

  127 if_statement: IF LBRACKET expression_list RBRACKET statement .

    $default  reduce using rule 127 (if_statement)


State 236

  120 while_loop: WHILE LBRACKET expression_list RBRACKET compound_statement .
  142 statement: compound_statement .

    ELSE            reduce using rule 120 (while_loop)
    ELSE            [reduce using rule 142 (statement)]
    RETURN          reduce using rule 120 (while_loop)
    RETURN          [reduce using rule 142 (statement)]
    FOR             reduce using rule 120 (while_loop)
    FOR             [reduce using rule 142 (statement)]
    DO              reduce using rule 120 (while_loop)
    DO              [reduce using rule 142 (statement)]
    IF              reduce using rule 120 (while_loop)
    IF              [reduce using rule 142 (statement)]
    WHILE           reduce using rule 120 (while_loop)
    WHILE           [reduce using rule 142 (statement)]
    LBRACKET        reduce using rule 120 (while_loop)
    LBRACKET        [reduce using rule 142 (statement)]
    LCURLY          reduce using rule 120 (while_loop)
    LCURLY          [reduce using rule 142 (statement)]
    RCURLY          reduce using rule 120 (while_loop)
    RCURLY          [reduce using rule 142 (statement)]
    PLUS_PLUS       reduce using rule 120 (while_loop)
    PLUS_PLUS       [reduce using rule 142 (statement)]
    MINUS_MINUS     reduce using rule 120 (while_loop)
    MINUS_MINUS     [reduce using rule 142 (statement)]
    SIZEOF          reduce using rule 120 (while_loop)
    SIZEOF          [reduce using rule 142 (statement)]
    SEMI_COLON      reduce using rule 120 (while_loop)
    SEMI_COLON      [reduce using rule 142 (statement)]
    BITWISE_AND     reduce using rule 120 (while_loop)
    BITWISE_AND     [reduce using rule 142 (statement)]
    MULT            reduce using rule 120 (while_loop)
    MULT            [reduce using rule 142 (statement)]
    PLUS            reduce using rule 120 (while_loop)
    PLUS            [reduce using rule 142 (statement)]
    MINUS           reduce using rule 120 (while_loop)
    MINUS           [reduce using rule 142 (statement)]
    WAVE            reduce using rule 120 (while_loop)
    WAVE            [reduce using rule 142 (statement)]
    EXL_MARK        reduce using rule 120 (while_loop)
    EXL_MARK        [reduce using rule 142 (statement)]
    INTEGER_CONST   reduce using rule 120 (while_loop)
    INTEGER_CONST   [reduce using rule 142 (statement)]
    FLOATING_CONST  reduce using rule 120 (while_loop)
    FLOATING_CONST  [reduce using rule 142 (statement)]
    CHAR_CONST      reduce using rule 120 (while_loop)
    CHAR_CONST      [reduce using rule 142 (statement)]
    IDENTIFIER      reduce using rule 120 (while_loop)
    IDENTIFIER      [reduce using rule 142 (statement)]
    STRING_LITERAL  reduce using rule 120 (while_loop)
    STRING_LITERAL  [reduce using rule 142 (statement)]
    $default        reduce using rule 120 (while_loop)


State 237

  121 while_loop: WHILE LBRACKET expression_list RBRACKET statement .

    $default  reduce using rule 121 (while_loop)


State 238

   98 expression_list: expression_list . COMMA expression
  115 for_loop_decl_statement: SEMI_COLON expression_list SEMI_COLON expression_list .

    COMMA  shift, and go to state 193

    $default  reduce using rule 115 (for_loop_decl_statement)


State 239

   98 expression_list: expression_list . COMMA expression
  114 for_loop_decl_statement: expression_list SEMI_COLON SEMI_COLON expression_list .

    COMMA  shift, and go to state 193

    $default  reduce using rule 114 (for_loop_decl_statement)


State 240

  112 for_loop_decl_statement: expression_list SEMI_COLON expression_list SEMI_COLON . expression_list
  113                        | expression_list SEMI_COLON expression_list SEMI_COLON .

    LBRACKET        shift, and go to state 25
    PLUS_PLUS       shift, and go to state 27
    MINUS_MINUS     shift, and go to state 28
    SIZEOF          shift, and go to state 29
    BITWISE_AND     shift, and go to state 30
    MULT            shift, and go to state 31
    PLUS            shift, and go to state 32
    MINUS           shift, and go to state 33
    WAVE            shift, and go to state 34
    EXL_MARK        shift, and go to state 35
    INTEGER_CONST   shift, and go to state 36
    FLOATING_CONST  shift, and go to state 37
    CHAR_CONST      shift, and go to state 38
    IDENTIFIER      shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40

    $default  reduce using rule 113 (for_loop_decl_statement)

    CONSTANT                   go to state 41
    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    UNARY_OPERATOR             go to state 46
    cast_expression            go to state 47
    multiplicative_expression  go to state 48
    additive_expression        go to state 49
    shift_expression           go to state 50
    relational_expression      go to state 51
    equality_expression        go to state 52
    and_expression             go to state 53
    exclusive_or_expression    go to state 54
    inclusive_or_expression    go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    conditional_expression     go to state 58
    assignment_expression      go to state 69
    expression                 go to state 162
    expression_list            go to state 243


State 241

  108 do_while_loop: DO compound_statement WHILE LBRACKET expression_list RBRACKET . SEMI_COLON

    SEMI_COLON  shift, and go to state 244


State 242

  109 do_while_loop: DO statement WHILE LBRACKET expression_list RBRACKET . SEMI_COLON

    SEMI_COLON  shift, and go to state 245


State 243

   98 expression_list: expression_list . COMMA expression
  112 for_loop_decl_statement: expression_list SEMI_COLON expression_list SEMI_COLON expression_list .

    COMMA  shift, and go to state 193

    $default  reduce using rule 112 (for_loop_decl_statement)


State 244

  108 do_while_loop: DO compound_statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON .

    $default  reduce using rule 108 (do_while_loop)


State 245

  109 do_while_loop: DO statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON .

    $default  reduce using rule 109 (do_while_loop)
