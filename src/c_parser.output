Terminals unused in grammar

   AUTO
   STRUCT
   BREAK
   LONG
   SWITCH
   CASE
   ENUM
   REGISTER
   TYPEDEF
   EXTERN
   UNION
   CONST
   FLOAT
   SHORT
   UNSIGNED
   CONTINUE
   SIGNED
   VOID
   DEFAULT
   GOTO
   VOLATILE
   STATIC
   THREE_DOTS
   HASH
   HASH_HASH


State 46 conflicts: 1 reduce/reduce
State 185 conflicts: 1 shift/reduce
State 205 conflicts: 1 shift/reduce
State 212 conflicts: 1 shift/reduce
State 230 conflicts: 24 reduce/reduce
State 246 conflicts: 24 reduce/reduce
State 250 conflicts: 24 reduce/reduce
State 252 conflicts: 24 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: fn_declaration
    2        | declaration
    3        | fn_prototype
    4        | program fn_declaration
    5        | program declaration
    6        | program fn_prototype

    7 CONSTANT: FLOATING_CONST
    8         | INTEGER_CONST
    9         | CHAR_CONST

   10 type_name: INT
   11          | DOUBLE
   12          | CHAR

   13 declaration: INT init_declarator_list SEMI_COLON
   14            | INT SEMI_COLON

   15 init_declarator_list: init_declarator
   16                     | init_declarator_list COMMA init_declarator

   17 init_declarator: declarator
   18                | declarator EQUALS initializer

   19 declarator: direct_declarator
   20           | pointer direct_declarator

   21 direct_declarator: IDENTIFIER
   22                  | LBRACKET declarator RBRACKET
   23                  | direct_declarator LSQUARE constant_expression RSQUARE
   24                  | direct_declarator LSQUARE RSQUARE

   25 pointer: MULT
   26        | pointer MULT

   27 initializer: expression
   28            | LCURLY initializer_list RCURLY
   29            | LCURLY initializer_list COMMA RCURLY

   30 initializer_list: initializer
   31                 | initializer_list COMMA initializer

   32 primary_expression: IDENTIFIER
   33                   | CONSTANT
   34                   | STRING_LITERAL
   35                   | LBRACKET expression RBRACKET

   36 postfix_expression: primary_expression
   37                   | postfix_expression LSQUARE expression RSQUARE
   38                   | bracketed_identifier LBRACKET argument_expression_list RBRACKET
   39                   | bracketed_identifier LBRACKET RBRACKET
   40                   | postfix_expression DOT IDENTIFIER
   41                   | postfix_expression PTR_OP IDENTIFIER
   42                   | postfix_expression PLUS_PLUS
   43                   | postfix_expression MINUS_MINUS

   44 argument_expression_list: expression
   45                         | argument_expression_list COMMA expression

   46 unary_expression: postfix_expression
   47                 | PLUS_PLUS unary_expression
   48                 | MINUS_MINUS unary_expression
   49                 | UNARY_OPERATOR cast_expression
   50                 | MULT cast_expression
   51                 | BITWISE_AND cast_expression
   52                 | SIZEOF unary_expression
   53                 | SIZEOF LBRACKET INT RBRACKET

   54 UNARY_OPERATOR: PLUS
   55               | MINUS
   56               | WAVE
   57               | EXL_MARK

   58 cast_expression: unary_expression
   59                | LBRACKET type_name RBRACKET cast_expression

   60 multiplicative_expression: cast_expression
   61                          | multiplicative_expression MULT cast_expression
   62                          | multiplicative_expression DIV cast_expression
   63                          | multiplicative_expression PERCENT cast_expression

   64 additive_expression: multiplicative_expression
   65                    | additive_expression PLUS multiplicative_expression
   66                    | additive_expression MINUS multiplicative_expression

   67 shift_expression: additive_expression
   68                 | shift_expression LSHIFT additive_expression
   69                 | shift_expression RSHIFT additive_expression

   70 relational_expression: shift_expression
   71                      | relational_expression LOGICAL_LESS shift_expression
   72                      | relational_expression LOGICAL_MORE shift_expression
   73                      | relational_expression LESS_OR_EQUAL shift_expression
   74                      | relational_expression MORE_OR_EQUAL shift_expression

   75 equality_expression: relational_expression
   76                    | equality_expression LOGICAL_EQUALITY relational_expression
   77                    | equality_expression LOGICAL_INEQUALITY relational_expression

   78 and_expression: equality_expression
   79               | and_expression BITWISE_AND equality_expression

   80 exclusive_or_expression: and_expression
   81                        | exclusive_or_expression BITWISE_XOR and_expression

   82 inclusive_or_expression: exclusive_or_expression
   83                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   84 logical_and_expression: inclusive_or_expression
   85                       | logical_and_expression LOGICAL_AND inclusive_or_expression

   86 logical_or_expression: logical_and_expression
   87                      | logical_or_expression LOGICAL_OR logical_and_expression

   88 conditional_expression: logical_or_expression
   89                       | logical_or_expression Q_MARK expression COLON conditional_expression

   90 assignment_expression: conditional_expression
   91                      | unary_expression ASSIGNMENT_OPERATOR assignment_expression

   92 ASSIGNMENT_OPERATOR: EQUALS
   93                    | MULT_EQUALS
   94                    | DIV_EQUALS
   95                    | PERCENT_EQUALS
   96                    | PLUS_EQUALS
   97                    | MINUS_EQUALS
   98                    | LSHIFT_EQUALS
   99                    | RSHIFT_EQUALS
  100                    | AND_EQUALS
  101                    | XOR_EQUALS
  102                    | OR_EQUALS

  103 expression: assignment_expression

  104 expression_list: expression
  105                | expression_list COMMA expression

  106 constant_expression: conditional_expression

  107 fn_prototype: INT IDENTIFIER LBRACKET fn_params_list RBRACKET SEMI_COLON

  108 fn_declaration: INT IDENTIFIER LBRACKET fn_params_list RBRACKET compound_statement

  109 fn_params_list: INT bracketed_identifier
  110               | fn_params_list COMMA INT bracketed_identifier
  111               | %empty

  112 bracketed_identifier: IDENTIFIER
  113                     | LBRACKET bracketed_identifier RBRACKET

  114 loop: for_loop
  115     | while_loop
  116     | do_while_loop

  117 do_while_loop: DO compound_statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON
  118              | DO statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON

  119 for_loop: FOR LBRACKET for_loop_decl_statement RBRACKET compound_statement
  120         | FOR LBRACKET for_loop_decl_statement RBRACKET statement

  121 for_loop_decl_statement: expression_list SEMI_COLON expression_list SEMI_COLON expression_list
  122                        | expression_list SEMI_COLON expression_list SEMI_COLON
  123                        | expression_list SEMI_COLON SEMI_COLON expression_list
  124                        | SEMI_COLON expression_list SEMI_COLON expression_list
  125                        | expression_list SEMI_COLON SEMI_COLON
  126                        | SEMI_COLON SEMI_COLON expression_list
  127                        | SEMI_COLON expression_list SEMI_COLON
  128                        | SEMI_COLON SEMI_COLON

  129 while_loop: WHILE LBRACKET expression_list RBRACKET compound_statement
  130           | WHILE LBRACKET expression_list RBRACKET statement

  131 if_block_statement: if_statement
  132                   | if_statement else_statement_list

  133 else_statement_list: else_statement
  134                    | else_statement_list else_statement

  135 if_statement: IF LBRACKET expression_list RBRACKET compound_statement
  136             | IF LBRACKET expression_list RBRACKET statement

  137 else_statement: ELSE compound_statement
  138               | ELSE statement

  139 compound_statement: LCURLY declaration_list statement_list RCURLY
  140                   | LCURLY statement_list RCURLY
  141                   | LCURLY declaration_list RCURLY
  142                   | LCURLY RCURLY

  143 declaration_list: declaration
  144                 | declaration_list declaration

  145 statement_list: statement
  146               | statement_list statement

  147 statement: loop
  148          | if_block_statement
  149          | expression_statement
  150          | semi_colon_statement
  151          | compound_statement

  152 expression_statement: expression_list SEMI_COLON

  153 semi_colon_statement: return_statement
  154                     | SEMI_COLON

  155 return_statement: RETURN expression SEMI_COLON
  156                 | RETURN SEMI_COLON


Terminals, with rules where they appear

$end (0) 0
error (256)
AUTO (258)
DOUBLE (259) 11
INT (260) 10 13 14 53 107 108 109 110
STRUCT (261)
BREAK (262)
ELSE (263) 137 138
LONG (264)
SWITCH (265)
CASE (266)
ENUM (267)
REGISTER (268)
TYPEDEF (269)
CHAR (270) 12
EXTERN (271)
RETURN (272) 155 156
UNION (273)
CONST (274)
FLOAT (275)
SHORT (276)
UNSIGNED (277)
CONTINUE (278)
FOR (279) 119 120
SIGNED (280)
VOID (281)
DEFAULT (282)
GOTO (283)
VOLATILE (284)
DO (285) 117 118
IF (286) 135 136
STATIC (287)
WHILE (288) 117 118 129 130
LSQUARE (289) 23 24 37
RSQUARE (290) 23 24 37
LBRACKET (291) 22 35 38 39 53 59 107 108 113 117 118 119 120 129 130
    135 136
RBRACKET (292) 22 35 38 39 53 59 107 108 113 117 118 119 120 129 130
    135 136
LCURLY (293) 28 29 139 140 141 142
RCURLY (294) 28 29 139 140 141 142
THREE_DOTS (295)
DOT (296) 40
PTR_OP (297) 41
PLUS_PLUS (298) 42 47
MINUS_MINUS (299) 43 48
SIZEOF (300) 52 53
LSHIFT (301) 68
RSHIFT (302) 69
LESS_OR_EQUAL (303) 73
MORE_OR_EQUAL (304) 74
LOGICAL_EQUALITY (305) 76
LOGICAL_INEQUALITY (306) 77
LOGICAL_AND (307) 85
LOGICAL_OR (308) 87
Q_MARK (309) 89
COLON (310) 89
MULT_EQUALS (311) 93
DIV_EQUALS (312) 94
PERCENT_EQUALS (313) 95
PLUS_EQUALS (314) 96
MINUS_EQUALS (315) 97
LSHIFT_EQUALS (316) 98
RSHIFT_EQUALS (317) 99
AND_EQUALS (318) 100
XOR_EQUALS (319) 101
OR_EQUALS (320) 102
COMMA (321) 16 29 31 45 105 110
HASH (322)
HASH_HASH (323)
SEMI_COLON (324) 13 14 107 117 118 121 122 123 124 125 126 127 128
    152 154 155 156
EQUALS (325) 18 92
BITWISE_OR (326) 83
BITWISE_AND (327) 51 79
BITWISE_XOR (328) 81
MULT (329) 25 26 50 61
PLUS (330) 54 65
MINUS (331) 55 66
WAVE (332) 56
EXL_MARK (333) 57
DIV (334) 62
PERCENT (335) 63
LOGICAL_MORE (336) 72
LOGICAL_LESS (337) 71
INTEGER_CONST (338) 8
FLOATING_CONST (339) 7
CHAR_CONST (340) 9
IDENTIFIER (341) 21 32 40 41 107 108 112
STRING_LITERAL (342) 34


Nonterminals, with rules where they appear

$accept (88)
    on left: 0
program (89)
    on left: 1 2 3 4 5 6, on right: 0 4 5 6
CONSTANT (90)
    on left: 7 8 9, on right: 33
type_name (91)
    on left: 10 11 12, on right: 59
declaration (92)
    on left: 13 14, on right: 2 5 143 144
init_declarator_list (93)
    on left: 15 16, on right: 13 16
init_declarator (94)
    on left: 17 18, on right: 15 16
declarator (95)
    on left: 19 20, on right: 17 18 22
direct_declarator (96)
    on left: 21 22 23 24, on right: 19 20 23 24
pointer (97)
    on left: 25 26, on right: 20 26
initializer (98)
    on left: 27 28 29, on right: 18 30 31
initializer_list (99)
    on left: 30 31, on right: 28 29 31
primary_expression (100)
    on left: 32 33 34 35, on right: 36
postfix_expression (101)
    on left: 36 37 38 39 40 41 42 43, on right: 37 40 41 42 43 46
argument_expression_list (102)
    on left: 44 45, on right: 38 45
unary_expression (103)
    on left: 46 47 48 49 50 51 52 53, on right: 47 48 52 58 91
UNARY_OPERATOR (104)
    on left: 54 55 56 57, on right: 49
cast_expression (105)
    on left: 58 59, on right: 49 50 51 59 60 61 62 63
multiplicative_expression (106)
    on left: 60 61 62 63, on right: 61 62 63 64 65 66
additive_expression (107)
    on left: 64 65 66, on right: 65 66 67 68 69
shift_expression (108)
    on left: 67 68 69, on right: 68 69 70 71 72 73 74
relational_expression (109)
    on left: 70 71 72 73 74, on right: 71 72 73 74 75 76 77
equality_expression (110)
    on left: 75 76 77, on right: 76 77 78 79
and_expression (111)
    on left: 78 79, on right: 79 80 81
exclusive_or_expression (112)
    on left: 80 81, on right: 81 82 83
inclusive_or_expression (113)
    on left: 82 83, on right: 83 84 85
logical_and_expression (114)
    on left: 84 85, on right: 85 86 87
logical_or_expression (115)
    on left: 86 87, on right: 87 88 89
conditional_expression (116)
    on left: 88 89, on right: 89 90 106
assignment_expression (117)
    on left: 90 91, on right: 91 103
ASSIGNMENT_OPERATOR (118)
    on left: 92 93 94 95 96 97 98 99 100 101 102, on right: 91
expression (119)
    on left: 103, on right: 27 35 37 44 45 89 104 105 155
expression_list (120)
    on left: 104 105, on right: 105 117 118 121 122 123 124 125 126
    127 129 130 135 136 152
constant_expression (121)
    on left: 106, on right: 23
fn_prototype (122)
    on left: 107, on right: 3 6
fn_declaration (123)
    on left: 108, on right: 1 4
fn_params_list (124)
    on left: 109 110 111, on right: 107 108 110
bracketed_identifier (125)
    on left: 112 113, on right: 38 39 109 110 113
loop (126)
    on left: 114 115 116, on right: 147
do_while_loop (127)
    on left: 117 118, on right: 116
for_loop (128)
    on left: 119 120, on right: 114
for_loop_decl_statement (129)
    on left: 121 122 123 124 125 126 127 128, on right: 119 120
while_loop (130)
    on left: 129 130, on right: 115
if_block_statement (131)
    on left: 131 132, on right: 148
else_statement_list (132)
    on left: 133 134, on right: 132 134
if_statement (133)
    on left: 135 136, on right: 131 132
else_statement (134)
    on left: 137 138, on right: 133 134
compound_statement (135)
    on left: 139 140 141 142, on right: 108 117 119 129 135 137 151
declaration_list (136)
    on left: 143 144, on right: 139 141 144
statement_list (137)
    on left: 145 146, on right: 139 140 146
statement (138)
    on left: 147 148 149 150 151, on right: 118 120 130 136 138 145
    146
expression_statement (139)
    on left: 152, on right: 149
semi_colon_statement (140)
    on left: 153 154, on right: 150
return_statement (141)
    on left: 155 156, on right: 153


State 0

    0 $accept: . program $end

    INT  shift, and go to state 1

    program         go to state 2
    declaration     go to state 3
    fn_prototype    go to state 4
    fn_declaration  go to state 5


State 1

   13 declaration: INT . init_declarator_list SEMI_COLON
   14            | INT . SEMI_COLON
  107 fn_prototype: INT . IDENTIFIER LBRACKET fn_params_list RBRACKET SEMI_COLON
  108 fn_declaration: INT . IDENTIFIER LBRACKET fn_params_list RBRACKET compound_statement

    LBRACKET    shift, and go to state 6
    SEMI_COLON  shift, and go to state 7
    MULT        shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    init_declarator_list  go to state 10
    init_declarator       go to state 11
    declarator            go to state 12
    direct_declarator     go to state 13
    pointer               go to state 14


State 2

    0 $accept: program . $end
    4 program: program . fn_declaration
    5        | program . declaration
    6        | program . fn_prototype

    $end  shift, and go to state 15
    INT   shift, and go to state 1

    declaration     go to state 16
    fn_prototype    go to state 17
    fn_declaration  go to state 18


State 3

    2 program: declaration .

    $default  reduce using rule 2 (program)


State 4

    3 program: fn_prototype .

    $default  reduce using rule 3 (program)


State 5

    1 program: fn_declaration .

    $default  reduce using rule 1 (program)


State 6

   22 direct_declarator: LBRACKET . declarator RBRACKET

    LBRACKET    shift, and go to state 6
    MULT        shift, and go to state 8
    IDENTIFIER  shift, and go to state 19

    declarator         go to state 20
    direct_declarator  go to state 13
    pointer            go to state 14


State 7

   14 declaration: INT SEMI_COLON .

    $default  reduce using rule 14 (declaration)


State 8

   25 pointer: MULT .

    $default  reduce using rule 25 (pointer)


State 9

   21 direct_declarator: IDENTIFIER .
  107 fn_prototype: INT IDENTIFIER . LBRACKET fn_params_list RBRACKET SEMI_COLON
  108 fn_declaration: INT IDENTIFIER . LBRACKET fn_params_list RBRACKET compound_statement

    LBRACKET  shift, and go to state 21

    $default  reduce using rule 21 (direct_declarator)


State 10

   13 declaration: INT init_declarator_list . SEMI_COLON
   16 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA       shift, and go to state 22
    SEMI_COLON  shift, and go to state 23


State 11

   15 init_declarator_list: init_declarator .

    $default  reduce using rule 15 (init_declarator_list)


State 12

   17 init_declarator: declarator .
   18                | declarator . EQUALS initializer

    EQUALS  shift, and go to state 24

    $default  reduce using rule 17 (init_declarator)


State 13

   19 declarator: direct_declarator .
   23 direct_declarator: direct_declarator . LSQUARE constant_expression RSQUARE
   24                  | direct_declarator . LSQUARE RSQUARE

    LSQUARE  shift, and go to state 25

    $default  reduce using rule 19 (declarator)


State 14

   20 declarator: pointer . direct_declarator
   26 pointer: pointer . MULT

    LBRACKET    shift, and go to state 6
    MULT        shift, and go to state 26
    IDENTIFIER  shift, and go to state 19

    direct_declarator  go to state 27


State 15

    0 $accept: program $end .

    $default  accept


State 16

    5 program: program declaration .

    $default  reduce using rule 5 (program)


State 17

    6 program: program fn_prototype .

    $default  reduce using rule 6 (program)


State 18

    4 program: program fn_declaration .

    $default  reduce using rule 4 (program)


State 19

   21 direct_declarator: IDENTIFIER .

    $default  reduce using rule 21 (direct_declarator)


State 20

   22 direct_declarator: LBRACKET declarator . RBRACKET

    RBRACKET  shift, and go to state 28


State 21

  107 fn_prototype: INT IDENTIFIER LBRACKET . fn_params_list RBRACKET SEMI_COLON
  108 fn_declaration: INT IDENTIFIER LBRACKET . fn_params_list RBRACKET compound_statement

    INT  shift, and go to state 29

    $default  reduce using rule 111 (fn_params_list)

    fn_params_list  go to state 30


State 22

   16 init_declarator_list: init_declarator_list COMMA . init_declarator

    LBRACKET    shift, and go to state 6
    MULT        shift, and go to state 8
    IDENTIFIER  shift, and go to state 19

    init_declarator    go to state 31
    declarator         go to state 12
    direct_declarator  go to state 13
    pointer            go to state 14


State 23

   13 declaration: INT init_declarator_list SEMI_COLON .

    $default  reduce using rule 13 (declaration)


State 24

   18 init_declarator: declarator EQUALS . initializer

    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 33
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    initializer                go to state 49
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 67
    bracketed_identifier       go to state 68


State 25

   23 direct_declarator: direct_declarator LSQUARE . constant_expression RSQUARE
   24                  | direct_declarator LSQUARE . RSQUARE

    RSQUARE         shift, and go to state 69
    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 71
    constant_expression        go to state 72
    bracketed_identifier       go to state 68


State 26

   26 pointer: pointer MULT .

    $default  reduce using rule 26 (pointer)


State 27

   20 declarator: pointer direct_declarator .
   23 direct_declarator: direct_declarator . LSQUARE constant_expression RSQUARE
   24                  | direct_declarator . LSQUARE RSQUARE

    LSQUARE  shift, and go to state 25

    $default  reduce using rule 20 (declarator)


State 28

   22 direct_declarator: LBRACKET declarator RBRACKET .

    $default  reduce using rule 22 (direct_declarator)


State 29

  109 fn_params_list: INT . bracketed_identifier

    LBRACKET    shift, and go to state 73
    IDENTIFIER  shift, and go to state 74

    bracketed_identifier  go to state 75


State 30

  107 fn_prototype: INT IDENTIFIER LBRACKET fn_params_list . RBRACKET SEMI_COLON
  108 fn_declaration: INT IDENTIFIER LBRACKET fn_params_list . RBRACKET compound_statement
  110 fn_params_list: fn_params_list . COMMA INT bracketed_identifier

    RBRACKET  shift, and go to state 76
    COMMA     shift, and go to state 77


State 31

   16 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 16 (init_declarator_list)


State 32

   35 primary_expression: LBRACKET . expression RBRACKET
   59 cast_expression: LBRACKET . type_name RBRACKET cast_expression
  113 bracketed_identifier: LBRACKET . bracketed_identifier RBRACKET

    DOUBLE          shift, and go to state 78
    INT             shift, and go to state 79
    CHAR            shift, and go to state 80
    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    type_name                  go to state 81
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 82
    bracketed_identifier       go to state 83


State 33

   28 initializer: LCURLY . initializer_list RCURLY
   29            | LCURLY . initializer_list COMMA RCURLY

    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 33
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    initializer                go to state 84
    initializer_list           go to state 85
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 67
    bracketed_identifier       go to state 68


State 34

   47 unary_expression: PLUS_PLUS . unary_expression

    LBRACKET        shift, and go to state 86
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT              go to state 48
    primary_expression    go to state 50
    postfix_expression    go to state 51
    unary_expression      go to state 87
    UNARY_OPERATOR        go to state 53
    bracketed_identifier  go to state 68


State 35

   48 unary_expression: MINUS_MINUS . unary_expression

    LBRACKET        shift, and go to state 86
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT              go to state 48
    primary_expression    go to state 50
    postfix_expression    go to state 51
    unary_expression      go to state 88
    UNARY_OPERATOR        go to state 53
    bracketed_identifier  go to state 68


State 36

   52 unary_expression: SIZEOF . unary_expression
   53                 | SIZEOF . LBRACKET INT RBRACKET

    LBRACKET        shift, and go to state 89
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT              go to state 48
    primary_expression    go to state 50
    postfix_expression    go to state 51
    unary_expression      go to state 90
    UNARY_OPERATOR        go to state 53
    bracketed_identifier  go to state 68


State 37

   51 unary_expression: BITWISE_AND . cast_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT              go to state 48
    primary_expression    go to state 50
    postfix_expression    go to state 51
    unary_expression      go to state 70
    UNARY_OPERATOR        go to state 53
    cast_expression       go to state 91
    bracketed_identifier  go to state 68


State 38

   50 unary_expression: MULT . cast_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT              go to state 48
    primary_expression    go to state 50
    postfix_expression    go to state 51
    unary_expression      go to state 70
    UNARY_OPERATOR        go to state 53
    cast_expression       go to state 92
    bracketed_identifier  go to state 68


State 39

   54 UNARY_OPERATOR: PLUS .

    $default  reduce using rule 54 (UNARY_OPERATOR)


State 40

   55 UNARY_OPERATOR: MINUS .

    $default  reduce using rule 55 (UNARY_OPERATOR)


State 41

   56 UNARY_OPERATOR: WAVE .

    $default  reduce using rule 56 (UNARY_OPERATOR)


State 42

   57 UNARY_OPERATOR: EXL_MARK .

    $default  reduce using rule 57 (UNARY_OPERATOR)


State 43

    8 CONSTANT: INTEGER_CONST .

    $default  reduce using rule 8 (CONSTANT)


State 44

    7 CONSTANT: FLOATING_CONST .

    $default  reduce using rule 7 (CONSTANT)


State 45

    9 CONSTANT: CHAR_CONST .

    $default  reduce using rule 9 (CONSTANT)


State 46

   32 primary_expression: IDENTIFIER .
  112 bracketed_identifier: IDENTIFIER .

    LBRACKET  reduce using rule 112 (bracketed_identifier)
    RBRACKET  reduce using rule 32 (primary_expression)
    RBRACKET  [reduce using rule 112 (bracketed_identifier)]
    $default  reduce using rule 32 (primary_expression)


State 47

   34 primary_expression: STRING_LITERAL .

    $default  reduce using rule 34 (primary_expression)


State 48

   33 primary_expression: CONSTANT .

    $default  reduce using rule 33 (primary_expression)


State 49

   18 init_declarator: declarator EQUALS initializer .

    $default  reduce using rule 18 (init_declarator)


State 50

   36 postfix_expression: primary_expression .

    $default  reduce using rule 36 (postfix_expression)


State 51

   37 postfix_expression: postfix_expression . LSQUARE expression RSQUARE
   40                   | postfix_expression . DOT IDENTIFIER
   41                   | postfix_expression . PTR_OP IDENTIFIER
   42                   | postfix_expression . PLUS_PLUS
   43                   | postfix_expression . MINUS_MINUS
   46 unary_expression: postfix_expression .

    LSQUARE      shift, and go to state 93
    DOT          shift, and go to state 94
    PTR_OP       shift, and go to state 95
    PLUS_PLUS    shift, and go to state 96
    MINUS_MINUS  shift, and go to state 97

    $default  reduce using rule 46 (unary_expression)


State 52

   58 cast_expression: unary_expression .
   91 assignment_expression: unary_expression . ASSIGNMENT_OPERATOR assignment_expression

    MULT_EQUALS     shift, and go to state 98
    DIV_EQUALS      shift, and go to state 99
    PERCENT_EQUALS  shift, and go to state 100
    PLUS_EQUALS     shift, and go to state 101
    MINUS_EQUALS    shift, and go to state 102
    LSHIFT_EQUALS   shift, and go to state 103
    RSHIFT_EQUALS   shift, and go to state 104
    AND_EQUALS      shift, and go to state 105
    XOR_EQUALS      shift, and go to state 106
    OR_EQUALS       shift, and go to state 107
    EQUALS          shift, and go to state 108

    $default  reduce using rule 58 (cast_expression)

    ASSIGNMENT_OPERATOR  go to state 109


State 53

   49 unary_expression: UNARY_OPERATOR . cast_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT              go to state 48
    primary_expression    go to state 50
    postfix_expression    go to state 51
    unary_expression      go to state 70
    UNARY_OPERATOR        go to state 53
    cast_expression       go to state 110
    bracketed_identifier  go to state 68


State 54

   60 multiplicative_expression: cast_expression .

    $default  reduce using rule 60 (multiplicative_expression)


State 55

   61 multiplicative_expression: multiplicative_expression . MULT cast_expression
   62                          | multiplicative_expression . DIV cast_expression
   63                          | multiplicative_expression . PERCENT cast_expression
   64 additive_expression: multiplicative_expression .

    MULT     shift, and go to state 111
    DIV      shift, and go to state 112
    PERCENT  shift, and go to state 113

    $default  reduce using rule 64 (additive_expression)


State 56

   65 additive_expression: additive_expression . PLUS multiplicative_expression
   66                    | additive_expression . MINUS multiplicative_expression
   67 shift_expression: additive_expression .

    PLUS   shift, and go to state 114
    MINUS  shift, and go to state 115

    $default  reduce using rule 67 (shift_expression)


State 57

   68 shift_expression: shift_expression . LSHIFT additive_expression
   69                 | shift_expression . RSHIFT additive_expression
   70 relational_expression: shift_expression .

    LSHIFT  shift, and go to state 116
    RSHIFT  shift, and go to state 117

    $default  reduce using rule 70 (relational_expression)


State 58

   71 relational_expression: relational_expression . LOGICAL_LESS shift_expression
   72                      | relational_expression . LOGICAL_MORE shift_expression
   73                      | relational_expression . LESS_OR_EQUAL shift_expression
   74                      | relational_expression . MORE_OR_EQUAL shift_expression
   75 equality_expression: relational_expression .

    LESS_OR_EQUAL  shift, and go to state 118
    MORE_OR_EQUAL  shift, and go to state 119
    LOGICAL_MORE   shift, and go to state 120
    LOGICAL_LESS   shift, and go to state 121

    $default  reduce using rule 75 (equality_expression)


State 59

   76 equality_expression: equality_expression . LOGICAL_EQUALITY relational_expression
   77                    | equality_expression . LOGICAL_INEQUALITY relational_expression
   78 and_expression: equality_expression .

    LOGICAL_EQUALITY    shift, and go to state 122
    LOGICAL_INEQUALITY  shift, and go to state 123

    $default  reduce using rule 78 (and_expression)


State 60

   79 and_expression: and_expression . BITWISE_AND equality_expression
   80 exclusive_or_expression: and_expression .

    BITWISE_AND  shift, and go to state 124

    $default  reduce using rule 80 (exclusive_or_expression)


State 61

   81 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   82 inclusive_or_expression: exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 125

    $default  reduce using rule 82 (inclusive_or_expression)


State 62

   83 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   84 logical_and_expression: inclusive_or_expression .

    BITWISE_OR  shift, and go to state 126

    $default  reduce using rule 84 (logical_and_expression)


State 63

   85 logical_and_expression: logical_and_expression . LOGICAL_AND inclusive_or_expression
   86 logical_or_expression: logical_and_expression .

    LOGICAL_AND  shift, and go to state 127

    $default  reduce using rule 86 (logical_or_expression)


State 64

   87 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression
   88 conditional_expression: logical_or_expression .
   89                       | logical_or_expression . Q_MARK expression COLON conditional_expression

    LOGICAL_OR  shift, and go to state 128
    Q_MARK      shift, and go to state 129

    $default  reduce using rule 88 (conditional_expression)


State 65

   90 assignment_expression: conditional_expression .

    $default  reduce using rule 90 (assignment_expression)


State 66

  103 expression: assignment_expression .

    $default  reduce using rule 103 (expression)


State 67

   27 initializer: expression .

    $default  reduce using rule 27 (initializer)


State 68

   38 postfix_expression: bracketed_identifier . LBRACKET argument_expression_list RBRACKET
   39                   | bracketed_identifier . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 130


State 69

   24 direct_declarator: direct_declarator LSQUARE RSQUARE .

    $default  reduce using rule 24 (direct_declarator)


State 70

   58 cast_expression: unary_expression .

    $default  reduce using rule 58 (cast_expression)


State 71

  106 constant_expression: conditional_expression .

    $default  reduce using rule 106 (constant_expression)


State 72

   23 direct_declarator: direct_declarator LSQUARE constant_expression . RSQUARE

    RSQUARE  shift, and go to state 131


State 73

  113 bracketed_identifier: LBRACKET . bracketed_identifier RBRACKET

    LBRACKET    shift, and go to state 73
    IDENTIFIER  shift, and go to state 74

    bracketed_identifier  go to state 132


State 74

  112 bracketed_identifier: IDENTIFIER .

    $default  reduce using rule 112 (bracketed_identifier)


State 75

  109 fn_params_list: INT bracketed_identifier .

    $default  reduce using rule 109 (fn_params_list)


State 76

  107 fn_prototype: INT IDENTIFIER LBRACKET fn_params_list RBRACKET . SEMI_COLON
  108 fn_declaration: INT IDENTIFIER LBRACKET fn_params_list RBRACKET . compound_statement

    LCURLY      shift, and go to state 133
    SEMI_COLON  shift, and go to state 134

    compound_statement  go to state 135


State 77

  110 fn_params_list: fn_params_list COMMA . INT bracketed_identifier

    INT  shift, and go to state 136


State 78

   11 type_name: DOUBLE .

    $default  reduce using rule 11 (type_name)


State 79

   10 type_name: INT .

    $default  reduce using rule 10 (type_name)


State 80

   12 type_name: CHAR .

    $default  reduce using rule 12 (type_name)


State 81

   59 cast_expression: LBRACKET type_name . RBRACKET cast_expression

    RBRACKET  shift, and go to state 137


State 82

   35 primary_expression: LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 138


State 83

   38 postfix_expression: bracketed_identifier . LBRACKET argument_expression_list RBRACKET
   39                   | bracketed_identifier . LBRACKET RBRACKET
  113 bracketed_identifier: LBRACKET bracketed_identifier . RBRACKET

    LBRACKET  shift, and go to state 130
    RBRACKET  shift, and go to state 139


State 84

   30 initializer_list: initializer .

    $default  reduce using rule 30 (initializer_list)


State 85

   28 initializer: LCURLY initializer_list . RCURLY
   29            | LCURLY initializer_list . COMMA RCURLY
   31 initializer_list: initializer_list . COMMA initializer

    RCURLY  shift, and go to state 140
    COMMA   shift, and go to state 141


State 86

   35 primary_expression: LBRACKET . expression RBRACKET
  113 bracketed_identifier: LBRACKET . bracketed_identifier RBRACKET

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 82
    bracketed_identifier       go to state 83


State 87

   47 unary_expression: PLUS_PLUS unary_expression .

    $default  reduce using rule 47 (unary_expression)


State 88

   48 unary_expression: MINUS_MINUS unary_expression .

    $default  reduce using rule 48 (unary_expression)


State 89

   35 primary_expression: LBRACKET . expression RBRACKET
   53 unary_expression: SIZEOF LBRACKET . INT RBRACKET
  113 bracketed_identifier: LBRACKET . bracketed_identifier RBRACKET

    INT             shift, and go to state 142
    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 82
    bracketed_identifier       go to state 83


State 90

   52 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 52 (unary_expression)


State 91

   51 unary_expression: BITWISE_AND cast_expression .

    $default  reduce using rule 51 (unary_expression)


State 92

   50 unary_expression: MULT cast_expression .

    $default  reduce using rule 50 (unary_expression)


State 93

   37 postfix_expression: postfix_expression LSQUARE . expression RSQUARE

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 143
    bracketed_identifier       go to state 68


State 94

   40 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 144


State 95

   41 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 145


State 96

   42 postfix_expression: postfix_expression PLUS_PLUS .

    $default  reduce using rule 42 (postfix_expression)


State 97

   43 postfix_expression: postfix_expression MINUS_MINUS .

    $default  reduce using rule 43 (postfix_expression)


State 98

   93 ASSIGNMENT_OPERATOR: MULT_EQUALS .

    $default  reduce using rule 93 (ASSIGNMENT_OPERATOR)


State 99

   94 ASSIGNMENT_OPERATOR: DIV_EQUALS .

    $default  reduce using rule 94 (ASSIGNMENT_OPERATOR)


State 100

   95 ASSIGNMENT_OPERATOR: PERCENT_EQUALS .

    $default  reduce using rule 95 (ASSIGNMENT_OPERATOR)


State 101

   96 ASSIGNMENT_OPERATOR: PLUS_EQUALS .

    $default  reduce using rule 96 (ASSIGNMENT_OPERATOR)


State 102

   97 ASSIGNMENT_OPERATOR: MINUS_EQUALS .

    $default  reduce using rule 97 (ASSIGNMENT_OPERATOR)


State 103

   98 ASSIGNMENT_OPERATOR: LSHIFT_EQUALS .

    $default  reduce using rule 98 (ASSIGNMENT_OPERATOR)


State 104

   99 ASSIGNMENT_OPERATOR: RSHIFT_EQUALS .

    $default  reduce using rule 99 (ASSIGNMENT_OPERATOR)


State 105

  100 ASSIGNMENT_OPERATOR: AND_EQUALS .

    $default  reduce using rule 100 (ASSIGNMENT_OPERATOR)


State 106

  101 ASSIGNMENT_OPERATOR: XOR_EQUALS .

    $default  reduce using rule 101 (ASSIGNMENT_OPERATOR)


State 107

  102 ASSIGNMENT_OPERATOR: OR_EQUALS .

    $default  reduce using rule 102 (ASSIGNMENT_OPERATOR)


State 108

   92 ASSIGNMENT_OPERATOR: EQUALS .

    $default  reduce using rule 92 (ASSIGNMENT_OPERATOR)


State 109

   91 assignment_expression: unary_expression ASSIGNMENT_OPERATOR . assignment_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 146
    bracketed_identifier       go to state 68


State 110

   49 unary_expression: UNARY_OPERATOR cast_expression .

    $default  reduce using rule 49 (unary_expression)


State 111

   61 multiplicative_expression: multiplicative_expression MULT . cast_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT              go to state 48
    primary_expression    go to state 50
    postfix_expression    go to state 51
    unary_expression      go to state 70
    UNARY_OPERATOR        go to state 53
    cast_expression       go to state 147
    bracketed_identifier  go to state 68


State 112

   62 multiplicative_expression: multiplicative_expression DIV . cast_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT              go to state 48
    primary_expression    go to state 50
    postfix_expression    go to state 51
    unary_expression      go to state 70
    UNARY_OPERATOR        go to state 53
    cast_expression       go to state 148
    bracketed_identifier  go to state 68


State 113

   63 multiplicative_expression: multiplicative_expression PERCENT . cast_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT              go to state 48
    primary_expression    go to state 50
    postfix_expression    go to state 51
    unary_expression      go to state 70
    UNARY_OPERATOR        go to state 53
    cast_expression       go to state 149
    bracketed_identifier  go to state 68


State 114

   65 additive_expression: additive_expression PLUS . multiplicative_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 150
    bracketed_identifier       go to state 68


State 115

   66 additive_expression: additive_expression MINUS . multiplicative_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 151
    bracketed_identifier       go to state 68


State 116

   68 shift_expression: shift_expression LSHIFT . additive_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 152
    bracketed_identifier       go to state 68


State 117

   69 shift_expression: shift_expression RSHIFT . additive_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 153
    bracketed_identifier       go to state 68


State 118

   73 relational_expression: relational_expression LESS_OR_EQUAL . shift_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 154
    bracketed_identifier       go to state 68


State 119

   74 relational_expression: relational_expression MORE_OR_EQUAL . shift_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 155
    bracketed_identifier       go to state 68


State 120

   72 relational_expression: relational_expression LOGICAL_MORE . shift_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 156
    bracketed_identifier       go to state 68


State 121

   71 relational_expression: relational_expression LOGICAL_LESS . shift_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 157
    bracketed_identifier       go to state 68


State 122

   76 equality_expression: equality_expression LOGICAL_EQUALITY . relational_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 158
    bracketed_identifier       go to state 68


State 123

   77 equality_expression: equality_expression LOGICAL_INEQUALITY . relational_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 159
    bracketed_identifier       go to state 68


State 124

   79 and_expression: and_expression BITWISE_AND . equality_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 160
    bracketed_identifier       go to state 68


State 125

   81 exclusive_or_expression: exclusive_or_expression BITWISE_XOR . and_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 161
    bracketed_identifier       go to state 68


State 126

   83 inclusive_or_expression: inclusive_or_expression BITWISE_OR . exclusive_or_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 162
    bracketed_identifier       go to state 68


State 127

   85 logical_and_expression: logical_and_expression LOGICAL_AND . inclusive_or_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 163
    bracketed_identifier       go to state 68


State 128

   87 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 164
    bracketed_identifier       go to state 68


State 129

   89 conditional_expression: logical_or_expression Q_MARK . expression COLON conditional_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 165
    bracketed_identifier       go to state 68


State 130

   38 postfix_expression: bracketed_identifier LBRACKET . argument_expression_list RBRACKET
   39                   | bracketed_identifier LBRACKET . RBRACKET

    LBRACKET        shift, and go to state 32
    RBRACKET        shift, and go to state 166
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    argument_expression_list   go to state 167
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 168
    bracketed_identifier       go to state 68


State 131

   23 direct_declarator: direct_declarator LSQUARE constant_expression RSQUARE .

    $default  reduce using rule 23 (direct_declarator)


State 132

  113 bracketed_identifier: LBRACKET bracketed_identifier . RBRACKET

    RBRACKET  shift, and go to state 139


State 133

  139 compound_statement: LCURLY . declaration_list statement_list RCURLY
  140                   | LCURLY . statement_list RCURLY
  141                   | LCURLY . declaration_list RCURLY
  142                   | LCURLY . RCURLY

    INT             shift, and go to state 169
    RETURN          shift, and go to state 170
    FOR             shift, and go to state 171
    DO              shift, and go to state 172
    IF              shift, and go to state 173
    WHILE           shift, and go to state 174
    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 133
    RCURLY          shift, and go to state 175
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 176
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    declaration                go to state 177
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 179
    bracketed_identifier       go to state 68
    loop                       go to state 180
    do_while_loop              go to state 181
    for_loop                   go to state 182
    while_loop                 go to state 183
    if_block_statement         go to state 184
    if_statement               go to state 185
    compound_statement         go to state 186
    declaration_list           go to state 187
    statement_list             go to state 188
    statement                  go to state 189
    expression_statement       go to state 190
    semi_colon_statement       go to state 191
    return_statement           go to state 192


State 134

  107 fn_prototype: INT IDENTIFIER LBRACKET fn_params_list RBRACKET SEMI_COLON .

    $default  reduce using rule 107 (fn_prototype)


State 135

  108 fn_declaration: INT IDENTIFIER LBRACKET fn_params_list RBRACKET compound_statement .

    $default  reduce using rule 108 (fn_declaration)


State 136

  110 fn_params_list: fn_params_list COMMA INT . bracketed_identifier

    LBRACKET    shift, and go to state 73
    IDENTIFIER  shift, and go to state 74

    bracketed_identifier  go to state 193


State 137

   59 cast_expression: LBRACKET type_name RBRACKET . cast_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT              go to state 48
    primary_expression    go to state 50
    postfix_expression    go to state 51
    unary_expression      go to state 70
    UNARY_OPERATOR        go to state 53
    cast_expression       go to state 194
    bracketed_identifier  go to state 68


State 138

   35 primary_expression: LBRACKET expression RBRACKET .

    $default  reduce using rule 35 (primary_expression)


State 139

  113 bracketed_identifier: LBRACKET bracketed_identifier RBRACKET .

    $default  reduce using rule 113 (bracketed_identifier)


State 140

   28 initializer: LCURLY initializer_list RCURLY .

    $default  reduce using rule 28 (initializer)


State 141

   29 initializer: LCURLY initializer_list COMMA . RCURLY
   31 initializer_list: initializer_list COMMA . initializer

    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 33
    RCURLY          shift, and go to state 195
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    initializer                go to state 196
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 67
    bracketed_identifier       go to state 68


State 142

   53 unary_expression: SIZEOF LBRACKET INT . RBRACKET

    RBRACKET  shift, and go to state 197


State 143

   37 postfix_expression: postfix_expression LSQUARE expression . RSQUARE

    RSQUARE  shift, and go to state 198


State 144

   40 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 40 (postfix_expression)


State 145

   41 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 41 (postfix_expression)


State 146

   91 assignment_expression: unary_expression ASSIGNMENT_OPERATOR assignment_expression .

    $default  reduce using rule 91 (assignment_expression)


State 147

   61 multiplicative_expression: multiplicative_expression MULT cast_expression .

    $default  reduce using rule 61 (multiplicative_expression)


State 148

   62 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 62 (multiplicative_expression)


State 149

   63 multiplicative_expression: multiplicative_expression PERCENT cast_expression .

    $default  reduce using rule 63 (multiplicative_expression)


State 150

   61 multiplicative_expression: multiplicative_expression . MULT cast_expression
   62                          | multiplicative_expression . DIV cast_expression
   63                          | multiplicative_expression . PERCENT cast_expression
   65 additive_expression: additive_expression PLUS multiplicative_expression .

    MULT     shift, and go to state 111
    DIV      shift, and go to state 112
    PERCENT  shift, and go to state 113

    $default  reduce using rule 65 (additive_expression)


State 151

   61 multiplicative_expression: multiplicative_expression . MULT cast_expression
   62                          | multiplicative_expression . DIV cast_expression
   63                          | multiplicative_expression . PERCENT cast_expression
   66 additive_expression: additive_expression MINUS multiplicative_expression .

    MULT     shift, and go to state 111
    DIV      shift, and go to state 112
    PERCENT  shift, and go to state 113

    $default  reduce using rule 66 (additive_expression)


State 152

   65 additive_expression: additive_expression . PLUS multiplicative_expression
   66                    | additive_expression . MINUS multiplicative_expression
   68 shift_expression: shift_expression LSHIFT additive_expression .

    PLUS   shift, and go to state 114
    MINUS  shift, and go to state 115

    $default  reduce using rule 68 (shift_expression)


State 153

   65 additive_expression: additive_expression . PLUS multiplicative_expression
   66                    | additive_expression . MINUS multiplicative_expression
   69 shift_expression: shift_expression RSHIFT additive_expression .

    PLUS   shift, and go to state 114
    MINUS  shift, and go to state 115

    $default  reduce using rule 69 (shift_expression)


State 154

   68 shift_expression: shift_expression . LSHIFT additive_expression
   69                 | shift_expression . RSHIFT additive_expression
   73 relational_expression: relational_expression LESS_OR_EQUAL shift_expression .

    LSHIFT  shift, and go to state 116
    RSHIFT  shift, and go to state 117

    $default  reduce using rule 73 (relational_expression)


State 155

   68 shift_expression: shift_expression . LSHIFT additive_expression
   69                 | shift_expression . RSHIFT additive_expression
   74 relational_expression: relational_expression MORE_OR_EQUAL shift_expression .

    LSHIFT  shift, and go to state 116
    RSHIFT  shift, and go to state 117

    $default  reduce using rule 74 (relational_expression)


State 156

   68 shift_expression: shift_expression . LSHIFT additive_expression
   69                 | shift_expression . RSHIFT additive_expression
   72 relational_expression: relational_expression LOGICAL_MORE shift_expression .

    LSHIFT  shift, and go to state 116
    RSHIFT  shift, and go to state 117

    $default  reduce using rule 72 (relational_expression)


State 157

   68 shift_expression: shift_expression . LSHIFT additive_expression
   69                 | shift_expression . RSHIFT additive_expression
   71 relational_expression: relational_expression LOGICAL_LESS shift_expression .

    LSHIFT  shift, and go to state 116
    RSHIFT  shift, and go to state 117

    $default  reduce using rule 71 (relational_expression)


State 158

   71 relational_expression: relational_expression . LOGICAL_LESS shift_expression
   72                      | relational_expression . LOGICAL_MORE shift_expression
   73                      | relational_expression . LESS_OR_EQUAL shift_expression
   74                      | relational_expression . MORE_OR_EQUAL shift_expression
   76 equality_expression: equality_expression LOGICAL_EQUALITY relational_expression .

    LESS_OR_EQUAL  shift, and go to state 118
    MORE_OR_EQUAL  shift, and go to state 119
    LOGICAL_MORE   shift, and go to state 120
    LOGICAL_LESS   shift, and go to state 121

    $default  reduce using rule 76 (equality_expression)


State 159

   71 relational_expression: relational_expression . LOGICAL_LESS shift_expression
   72                      | relational_expression . LOGICAL_MORE shift_expression
   73                      | relational_expression . LESS_OR_EQUAL shift_expression
   74                      | relational_expression . MORE_OR_EQUAL shift_expression
   77 equality_expression: equality_expression LOGICAL_INEQUALITY relational_expression .

    LESS_OR_EQUAL  shift, and go to state 118
    MORE_OR_EQUAL  shift, and go to state 119
    LOGICAL_MORE   shift, and go to state 120
    LOGICAL_LESS   shift, and go to state 121

    $default  reduce using rule 77 (equality_expression)


State 160

   76 equality_expression: equality_expression . LOGICAL_EQUALITY relational_expression
   77                    | equality_expression . LOGICAL_INEQUALITY relational_expression
   79 and_expression: and_expression BITWISE_AND equality_expression .

    LOGICAL_EQUALITY    shift, and go to state 122
    LOGICAL_INEQUALITY  shift, and go to state 123

    $default  reduce using rule 79 (and_expression)


State 161

   79 and_expression: and_expression . BITWISE_AND equality_expression
   81 exclusive_or_expression: exclusive_or_expression BITWISE_XOR and_expression .

    BITWISE_AND  shift, and go to state 124

    $default  reduce using rule 81 (exclusive_or_expression)


State 162

   81 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   83 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 125

    $default  reduce using rule 83 (inclusive_or_expression)


State 163

   83 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   85 logical_and_expression: logical_and_expression LOGICAL_AND inclusive_or_expression .

    BITWISE_OR  shift, and go to state 126

    $default  reduce using rule 85 (logical_and_expression)


State 164

   85 logical_and_expression: logical_and_expression . LOGICAL_AND inclusive_or_expression
   87 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .

    LOGICAL_AND  shift, and go to state 127

    $default  reduce using rule 87 (logical_or_expression)


State 165

   89 conditional_expression: logical_or_expression Q_MARK expression . COLON conditional_expression

    COLON  shift, and go to state 199


State 166

   39 postfix_expression: bracketed_identifier LBRACKET RBRACKET .

    $default  reduce using rule 39 (postfix_expression)


State 167

   38 postfix_expression: bracketed_identifier LBRACKET argument_expression_list . RBRACKET
   45 argument_expression_list: argument_expression_list . COMMA expression

    RBRACKET  shift, and go to state 200
    COMMA     shift, and go to state 201


State 168

   44 argument_expression_list: expression .

    $default  reduce using rule 44 (argument_expression_list)


State 169

   13 declaration: INT . init_declarator_list SEMI_COLON
   14            | INT . SEMI_COLON

    LBRACKET    shift, and go to state 6
    SEMI_COLON  shift, and go to state 7
    MULT        shift, and go to state 8
    IDENTIFIER  shift, and go to state 19

    init_declarator_list  go to state 10
    init_declarator       go to state 11
    declarator            go to state 12
    direct_declarator     go to state 13
    pointer               go to state 14


State 170

  155 return_statement: RETURN . expression SEMI_COLON
  156                 | RETURN . SEMI_COLON

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 202
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 203
    bracketed_identifier       go to state 68


State 171

  119 for_loop: FOR . LBRACKET for_loop_decl_statement RBRACKET compound_statement
  120         | FOR . LBRACKET for_loop_decl_statement RBRACKET statement

    LBRACKET  shift, and go to state 204


State 172

  117 do_while_loop: DO . compound_statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON
  118              | DO . statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON

    RETURN          shift, and go to state 170
    FOR             shift, and go to state 171
    DO              shift, and go to state 172
    IF              shift, and go to state 173
    WHILE           shift, and go to state 174
    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 133
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 176
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 179
    bracketed_identifier       go to state 68
    loop                       go to state 180
    do_while_loop              go to state 181
    for_loop                   go to state 182
    while_loop                 go to state 183
    if_block_statement         go to state 184
    if_statement               go to state 185
    compound_statement         go to state 205
    statement                  go to state 206
    expression_statement       go to state 190
    semi_colon_statement       go to state 191
    return_statement           go to state 192


State 173

  135 if_statement: IF . LBRACKET expression_list RBRACKET compound_statement
  136             | IF . LBRACKET expression_list RBRACKET statement

    LBRACKET  shift, and go to state 207


State 174

  129 while_loop: WHILE . LBRACKET expression_list RBRACKET compound_statement
  130           | WHILE . LBRACKET expression_list RBRACKET statement

    LBRACKET  shift, and go to state 208


State 175

  142 compound_statement: LCURLY RCURLY .

    $default  reduce using rule 142 (compound_statement)


State 176

  154 semi_colon_statement: SEMI_COLON .

    $default  reduce using rule 154 (semi_colon_statement)


State 177

  143 declaration_list: declaration .

    $default  reduce using rule 143 (declaration_list)


State 178

  104 expression_list: expression .

    $default  reduce using rule 104 (expression_list)


State 179

  105 expression_list: expression_list . COMMA expression
  152 expression_statement: expression_list . SEMI_COLON

    COMMA       shift, and go to state 209
    SEMI_COLON  shift, and go to state 210


State 180

  147 statement: loop .

    $default  reduce using rule 147 (statement)


State 181

  116 loop: do_while_loop .

    $default  reduce using rule 116 (loop)


State 182

  114 loop: for_loop .

    $default  reduce using rule 114 (loop)


State 183

  115 loop: while_loop .

    $default  reduce using rule 115 (loop)


State 184

  148 statement: if_block_statement .

    $default  reduce using rule 148 (statement)


State 185

  131 if_block_statement: if_statement .
  132                   | if_statement . else_statement_list

    ELSE  shift, and go to state 211

    ELSE      [reduce using rule 131 (if_block_statement)]
    $default  reduce using rule 131 (if_block_statement)

    else_statement_list  go to state 212
    else_statement       go to state 213


State 186

  151 statement: compound_statement .

    $default  reduce using rule 151 (statement)


State 187

  139 compound_statement: LCURLY declaration_list . statement_list RCURLY
  141                   | LCURLY declaration_list . RCURLY
  144 declaration_list: declaration_list . declaration

    INT             shift, and go to state 169
    RETURN          shift, and go to state 170
    FOR             shift, and go to state 171
    DO              shift, and go to state 172
    IF              shift, and go to state 173
    WHILE           shift, and go to state 174
    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 133
    RCURLY          shift, and go to state 214
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 176
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    declaration                go to state 215
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 179
    bracketed_identifier       go to state 68
    loop                       go to state 180
    do_while_loop              go to state 181
    for_loop                   go to state 182
    while_loop                 go to state 183
    if_block_statement         go to state 184
    if_statement               go to state 185
    compound_statement         go to state 186
    statement_list             go to state 216
    statement                  go to state 189
    expression_statement       go to state 190
    semi_colon_statement       go to state 191
    return_statement           go to state 192


State 188

  140 compound_statement: LCURLY statement_list . RCURLY
  146 statement_list: statement_list . statement

    RETURN          shift, and go to state 170
    FOR             shift, and go to state 171
    DO              shift, and go to state 172
    IF              shift, and go to state 173
    WHILE           shift, and go to state 174
    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 133
    RCURLY          shift, and go to state 217
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 176
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 179
    bracketed_identifier       go to state 68
    loop                       go to state 180
    do_while_loop              go to state 181
    for_loop                   go to state 182
    while_loop                 go to state 183
    if_block_statement         go to state 184
    if_statement               go to state 185
    compound_statement         go to state 186
    statement                  go to state 218
    expression_statement       go to state 190
    semi_colon_statement       go to state 191
    return_statement           go to state 192


State 189

  145 statement_list: statement .

    $default  reduce using rule 145 (statement_list)


State 190

  149 statement: expression_statement .

    $default  reduce using rule 149 (statement)


State 191

  150 statement: semi_colon_statement .

    $default  reduce using rule 150 (statement)


State 192

  153 semi_colon_statement: return_statement .

    $default  reduce using rule 153 (semi_colon_statement)


State 193

  110 fn_params_list: fn_params_list COMMA INT bracketed_identifier .

    $default  reduce using rule 110 (fn_params_list)


State 194

   59 cast_expression: LBRACKET type_name RBRACKET cast_expression .

    $default  reduce using rule 59 (cast_expression)


State 195

   29 initializer: LCURLY initializer_list COMMA RCURLY .

    $default  reduce using rule 29 (initializer)


State 196

   31 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 31 (initializer_list)


State 197

   53 unary_expression: SIZEOF LBRACKET INT RBRACKET .

    $default  reduce using rule 53 (unary_expression)


State 198

   37 postfix_expression: postfix_expression LSQUARE expression RSQUARE .

    $default  reduce using rule 37 (postfix_expression)


State 199

   89 conditional_expression: logical_or_expression Q_MARK expression COLON . conditional_expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 70
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 219
    bracketed_identifier       go to state 68


State 200

   38 postfix_expression: bracketed_identifier LBRACKET argument_expression_list RBRACKET .

    $default  reduce using rule 38 (postfix_expression)


State 201

   45 argument_expression_list: argument_expression_list COMMA . expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 220
    bracketed_identifier       go to state 68


State 202

  156 return_statement: RETURN SEMI_COLON .

    $default  reduce using rule 156 (return_statement)


State 203

  155 return_statement: RETURN expression . SEMI_COLON

    SEMI_COLON  shift, and go to state 221


State 204

  119 for_loop: FOR LBRACKET . for_loop_decl_statement RBRACKET compound_statement
  120         | FOR LBRACKET . for_loop_decl_statement RBRACKET statement

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 222
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 223
    bracketed_identifier       go to state 68
    for_loop_decl_statement    go to state 224


State 205

  117 do_while_loop: DO compound_statement . WHILE LBRACKET expression_list RBRACKET SEMI_COLON
  151 statement: compound_statement .

    WHILE  shift, and go to state 225

    WHILE  [reduce using rule 151 (statement)]


State 206

  118 do_while_loop: DO statement . WHILE LBRACKET expression_list RBRACKET SEMI_COLON

    WHILE  shift, and go to state 226


State 207

  135 if_statement: IF LBRACKET . expression_list RBRACKET compound_statement
  136             | IF LBRACKET . expression_list RBRACKET statement

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 227
    bracketed_identifier       go to state 68


State 208

  129 while_loop: WHILE LBRACKET . expression_list RBRACKET compound_statement
  130           | WHILE LBRACKET . expression_list RBRACKET statement

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 228
    bracketed_identifier       go to state 68


State 209

  105 expression_list: expression_list COMMA . expression

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 229
    bracketed_identifier       go to state 68


State 210

  152 expression_statement: expression_list SEMI_COLON .

    $default  reduce using rule 152 (expression_statement)


State 211

  137 else_statement: ELSE . compound_statement
  138               | ELSE . statement

    RETURN          shift, and go to state 170
    FOR             shift, and go to state 171
    DO              shift, and go to state 172
    IF              shift, and go to state 173
    WHILE           shift, and go to state 174
    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 133
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 176
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 179
    bracketed_identifier       go to state 68
    loop                       go to state 180
    do_while_loop              go to state 181
    for_loop                   go to state 182
    while_loop                 go to state 183
    if_block_statement         go to state 184
    if_statement               go to state 185
    compound_statement         go to state 230
    statement                  go to state 231
    expression_statement       go to state 190
    semi_colon_statement       go to state 191
    return_statement           go to state 192


State 212

  132 if_block_statement: if_statement else_statement_list .
  134 else_statement_list: else_statement_list . else_statement

    ELSE  shift, and go to state 211

    ELSE      [reduce using rule 132 (if_block_statement)]
    $default  reduce using rule 132 (if_block_statement)

    else_statement  go to state 232


State 213

  133 else_statement_list: else_statement .

    $default  reduce using rule 133 (else_statement_list)


State 214

  141 compound_statement: LCURLY declaration_list RCURLY .

    $default  reduce using rule 141 (compound_statement)


State 215

  144 declaration_list: declaration_list declaration .

    $default  reduce using rule 144 (declaration_list)


State 216

  139 compound_statement: LCURLY declaration_list statement_list . RCURLY
  146 statement_list: statement_list . statement

    RETURN          shift, and go to state 170
    FOR             shift, and go to state 171
    DO              shift, and go to state 172
    IF              shift, and go to state 173
    WHILE           shift, and go to state 174
    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 133
    RCURLY          shift, and go to state 233
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 176
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 179
    bracketed_identifier       go to state 68
    loop                       go to state 180
    do_while_loop              go to state 181
    for_loop                   go to state 182
    while_loop                 go to state 183
    if_block_statement         go to state 184
    if_statement               go to state 185
    compound_statement         go to state 186
    statement                  go to state 218
    expression_statement       go to state 190
    semi_colon_statement       go to state 191
    return_statement           go to state 192


State 217

  140 compound_statement: LCURLY statement_list RCURLY .

    $default  reduce using rule 140 (compound_statement)


State 218

  146 statement_list: statement_list statement .

    $default  reduce using rule 146 (statement_list)


State 219

   89 conditional_expression: logical_or_expression Q_MARK expression COLON conditional_expression .

    $default  reduce using rule 89 (conditional_expression)


State 220

   45 argument_expression_list: argument_expression_list COMMA expression .

    $default  reduce using rule 45 (argument_expression_list)


State 221

  155 return_statement: RETURN expression SEMI_COLON .

    $default  reduce using rule 155 (return_statement)


State 222

  124 for_loop_decl_statement: SEMI_COLON . expression_list SEMI_COLON expression_list
  126                        | SEMI_COLON . SEMI_COLON expression_list
  127                        | SEMI_COLON . expression_list SEMI_COLON
  128                        | SEMI_COLON . SEMI_COLON

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 234
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 235
    bracketed_identifier       go to state 68


State 223

  105 expression_list: expression_list . COMMA expression
  121 for_loop_decl_statement: expression_list . SEMI_COLON expression_list SEMI_COLON expression_list
  122                        | expression_list . SEMI_COLON expression_list SEMI_COLON
  123                        | expression_list . SEMI_COLON SEMI_COLON expression_list
  125                        | expression_list . SEMI_COLON SEMI_COLON

    COMMA       shift, and go to state 209
    SEMI_COLON  shift, and go to state 236


State 224

  119 for_loop: FOR LBRACKET for_loop_decl_statement . RBRACKET compound_statement
  120         | FOR LBRACKET for_loop_decl_statement . RBRACKET statement

    RBRACKET  shift, and go to state 237


State 225

  117 do_while_loop: DO compound_statement WHILE . LBRACKET expression_list RBRACKET SEMI_COLON

    LBRACKET  shift, and go to state 238


State 226

  118 do_while_loop: DO statement WHILE . LBRACKET expression_list RBRACKET SEMI_COLON

    LBRACKET  shift, and go to state 239


State 227

  105 expression_list: expression_list . COMMA expression
  135 if_statement: IF LBRACKET expression_list . RBRACKET compound_statement
  136             | IF LBRACKET expression_list . RBRACKET statement

    RBRACKET  shift, and go to state 240
    COMMA     shift, and go to state 209


State 228

  105 expression_list: expression_list . COMMA expression
  129 while_loop: WHILE LBRACKET expression_list . RBRACKET compound_statement
  130           | WHILE LBRACKET expression_list . RBRACKET statement

    RBRACKET  shift, and go to state 241
    COMMA     shift, and go to state 209


State 229

  105 expression_list: expression_list COMMA expression .

    $default  reduce using rule 105 (expression_list)


State 230

  137 else_statement: ELSE compound_statement .
  151 statement: compound_statement .

    ELSE            reduce using rule 137 (else_statement)
    ELSE            [reduce using rule 151 (statement)]
    RETURN          reduce using rule 137 (else_statement)
    RETURN          [reduce using rule 151 (statement)]
    FOR             reduce using rule 137 (else_statement)
    FOR             [reduce using rule 151 (statement)]
    DO              reduce using rule 137 (else_statement)
    DO              [reduce using rule 151 (statement)]
    IF              reduce using rule 137 (else_statement)
    IF              [reduce using rule 151 (statement)]
    WHILE           reduce using rule 137 (else_statement)
    WHILE           [reduce using rule 151 (statement)]
    LBRACKET        reduce using rule 137 (else_statement)
    LBRACKET        [reduce using rule 151 (statement)]
    LCURLY          reduce using rule 137 (else_statement)
    LCURLY          [reduce using rule 151 (statement)]
    RCURLY          reduce using rule 137 (else_statement)
    RCURLY          [reduce using rule 151 (statement)]
    PLUS_PLUS       reduce using rule 137 (else_statement)
    PLUS_PLUS       [reduce using rule 151 (statement)]
    MINUS_MINUS     reduce using rule 137 (else_statement)
    MINUS_MINUS     [reduce using rule 151 (statement)]
    SIZEOF          reduce using rule 137 (else_statement)
    SIZEOF          [reduce using rule 151 (statement)]
    SEMI_COLON      reduce using rule 137 (else_statement)
    SEMI_COLON      [reduce using rule 151 (statement)]
    BITWISE_AND     reduce using rule 137 (else_statement)
    BITWISE_AND     [reduce using rule 151 (statement)]
    MULT            reduce using rule 137 (else_statement)
    MULT            [reduce using rule 151 (statement)]
    PLUS            reduce using rule 137 (else_statement)
    PLUS            [reduce using rule 151 (statement)]
    MINUS           reduce using rule 137 (else_statement)
    MINUS           [reduce using rule 151 (statement)]
    WAVE            reduce using rule 137 (else_statement)
    WAVE            [reduce using rule 151 (statement)]
    EXL_MARK        reduce using rule 137 (else_statement)
    EXL_MARK        [reduce using rule 151 (statement)]
    INTEGER_CONST   reduce using rule 137 (else_statement)
    INTEGER_CONST   [reduce using rule 151 (statement)]
    FLOATING_CONST  reduce using rule 137 (else_statement)
    FLOATING_CONST  [reduce using rule 151 (statement)]
    CHAR_CONST      reduce using rule 137 (else_statement)
    CHAR_CONST      [reduce using rule 151 (statement)]
    IDENTIFIER      reduce using rule 137 (else_statement)
    IDENTIFIER      [reduce using rule 151 (statement)]
    STRING_LITERAL  reduce using rule 137 (else_statement)
    STRING_LITERAL  [reduce using rule 151 (statement)]
    $default        reduce using rule 137 (else_statement)


State 231

  138 else_statement: ELSE statement .

    $default  reduce using rule 138 (else_statement)


State 232

  134 else_statement_list: else_statement_list else_statement .

    $default  reduce using rule 134 (else_statement_list)


State 233

  139 compound_statement: LCURLY declaration_list statement_list RCURLY .

    $default  reduce using rule 139 (compound_statement)


State 234

  126 for_loop_decl_statement: SEMI_COLON SEMI_COLON . expression_list
  128                        | SEMI_COLON SEMI_COLON .

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    $default  reduce using rule 128 (for_loop_decl_statement)

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 242
    bracketed_identifier       go to state 68


State 235

  105 expression_list: expression_list . COMMA expression
  124 for_loop_decl_statement: SEMI_COLON expression_list . SEMI_COLON expression_list
  127                        | SEMI_COLON expression_list . SEMI_COLON

    COMMA       shift, and go to state 209
    SEMI_COLON  shift, and go to state 243


State 236

  121 for_loop_decl_statement: expression_list SEMI_COLON . expression_list SEMI_COLON expression_list
  122                        | expression_list SEMI_COLON . expression_list SEMI_COLON
  123                        | expression_list SEMI_COLON . SEMI_COLON expression_list
  125                        | expression_list SEMI_COLON . SEMI_COLON

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 244
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 245
    bracketed_identifier       go to state 68


State 237

  119 for_loop: FOR LBRACKET for_loop_decl_statement RBRACKET . compound_statement
  120         | FOR LBRACKET for_loop_decl_statement RBRACKET . statement

    RETURN          shift, and go to state 170
    FOR             shift, and go to state 171
    DO              shift, and go to state 172
    IF              shift, and go to state 173
    WHILE           shift, and go to state 174
    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 133
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 176
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 179
    bracketed_identifier       go to state 68
    loop                       go to state 180
    do_while_loop              go to state 181
    for_loop                   go to state 182
    while_loop                 go to state 183
    if_block_statement         go to state 184
    if_statement               go to state 185
    compound_statement         go to state 246
    statement                  go to state 247
    expression_statement       go to state 190
    semi_colon_statement       go to state 191
    return_statement           go to state 192


State 238

  117 do_while_loop: DO compound_statement WHILE LBRACKET . expression_list RBRACKET SEMI_COLON

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 248
    bracketed_identifier       go to state 68


State 239

  118 do_while_loop: DO statement WHILE LBRACKET . expression_list RBRACKET SEMI_COLON

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 249
    bracketed_identifier       go to state 68


State 240

  135 if_statement: IF LBRACKET expression_list RBRACKET . compound_statement
  136             | IF LBRACKET expression_list RBRACKET . statement

    RETURN          shift, and go to state 170
    FOR             shift, and go to state 171
    DO              shift, and go to state 172
    IF              shift, and go to state 173
    WHILE           shift, and go to state 174
    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 133
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 176
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 179
    bracketed_identifier       go to state 68
    loop                       go to state 180
    do_while_loop              go to state 181
    for_loop                   go to state 182
    while_loop                 go to state 183
    if_block_statement         go to state 184
    if_statement               go to state 185
    compound_statement         go to state 250
    statement                  go to state 251
    expression_statement       go to state 190
    semi_colon_statement       go to state 191
    return_statement           go to state 192


State 241

  129 while_loop: WHILE LBRACKET expression_list RBRACKET . compound_statement
  130           | WHILE LBRACKET expression_list RBRACKET . statement

    RETURN          shift, and go to state 170
    FOR             shift, and go to state 171
    DO              shift, and go to state 172
    IF              shift, and go to state 173
    WHILE           shift, and go to state 174
    LBRACKET        shift, and go to state 32
    LCURLY          shift, and go to state 133
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    SEMI_COLON      shift, and go to state 176
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 179
    bracketed_identifier       go to state 68
    loop                       go to state 180
    do_while_loop              go to state 181
    for_loop                   go to state 182
    while_loop                 go to state 183
    if_block_statement         go to state 184
    if_statement               go to state 185
    compound_statement         go to state 252
    statement                  go to state 253
    expression_statement       go to state 190
    semi_colon_statement       go to state 191
    return_statement           go to state 192


State 242

  105 expression_list: expression_list . COMMA expression
  126 for_loop_decl_statement: SEMI_COLON SEMI_COLON expression_list .

    COMMA  shift, and go to state 209

    $default  reduce using rule 126 (for_loop_decl_statement)


State 243

  124 for_loop_decl_statement: SEMI_COLON expression_list SEMI_COLON . expression_list
  127                        | SEMI_COLON expression_list SEMI_COLON .

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    $default  reduce using rule 127 (for_loop_decl_statement)

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 254
    bracketed_identifier       go to state 68


State 244

  123 for_loop_decl_statement: expression_list SEMI_COLON SEMI_COLON . expression_list
  125                        | expression_list SEMI_COLON SEMI_COLON .

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    $default  reduce using rule 125 (for_loop_decl_statement)

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 255
    bracketed_identifier       go to state 68


State 245

  105 expression_list: expression_list . COMMA expression
  121 for_loop_decl_statement: expression_list SEMI_COLON expression_list . SEMI_COLON expression_list
  122                        | expression_list SEMI_COLON expression_list . SEMI_COLON

    COMMA       shift, and go to state 209
    SEMI_COLON  shift, and go to state 256


State 246

  119 for_loop: FOR LBRACKET for_loop_decl_statement RBRACKET compound_statement .
  151 statement: compound_statement .

    ELSE            reduce using rule 119 (for_loop)
    ELSE            [reduce using rule 151 (statement)]
    RETURN          reduce using rule 119 (for_loop)
    RETURN          [reduce using rule 151 (statement)]
    FOR             reduce using rule 119 (for_loop)
    FOR             [reduce using rule 151 (statement)]
    DO              reduce using rule 119 (for_loop)
    DO              [reduce using rule 151 (statement)]
    IF              reduce using rule 119 (for_loop)
    IF              [reduce using rule 151 (statement)]
    WHILE           reduce using rule 119 (for_loop)
    WHILE           [reduce using rule 151 (statement)]
    LBRACKET        reduce using rule 119 (for_loop)
    LBRACKET        [reduce using rule 151 (statement)]
    LCURLY          reduce using rule 119 (for_loop)
    LCURLY          [reduce using rule 151 (statement)]
    RCURLY          reduce using rule 119 (for_loop)
    RCURLY          [reduce using rule 151 (statement)]
    PLUS_PLUS       reduce using rule 119 (for_loop)
    PLUS_PLUS       [reduce using rule 151 (statement)]
    MINUS_MINUS     reduce using rule 119 (for_loop)
    MINUS_MINUS     [reduce using rule 151 (statement)]
    SIZEOF          reduce using rule 119 (for_loop)
    SIZEOF          [reduce using rule 151 (statement)]
    SEMI_COLON      reduce using rule 119 (for_loop)
    SEMI_COLON      [reduce using rule 151 (statement)]
    BITWISE_AND     reduce using rule 119 (for_loop)
    BITWISE_AND     [reduce using rule 151 (statement)]
    MULT            reduce using rule 119 (for_loop)
    MULT            [reduce using rule 151 (statement)]
    PLUS            reduce using rule 119 (for_loop)
    PLUS            [reduce using rule 151 (statement)]
    MINUS           reduce using rule 119 (for_loop)
    MINUS           [reduce using rule 151 (statement)]
    WAVE            reduce using rule 119 (for_loop)
    WAVE            [reduce using rule 151 (statement)]
    EXL_MARK        reduce using rule 119 (for_loop)
    EXL_MARK        [reduce using rule 151 (statement)]
    INTEGER_CONST   reduce using rule 119 (for_loop)
    INTEGER_CONST   [reduce using rule 151 (statement)]
    FLOATING_CONST  reduce using rule 119 (for_loop)
    FLOATING_CONST  [reduce using rule 151 (statement)]
    CHAR_CONST      reduce using rule 119 (for_loop)
    CHAR_CONST      [reduce using rule 151 (statement)]
    IDENTIFIER      reduce using rule 119 (for_loop)
    IDENTIFIER      [reduce using rule 151 (statement)]
    STRING_LITERAL  reduce using rule 119 (for_loop)
    STRING_LITERAL  [reduce using rule 151 (statement)]
    $default        reduce using rule 119 (for_loop)


State 247

  120 for_loop: FOR LBRACKET for_loop_decl_statement RBRACKET statement .

    $default  reduce using rule 120 (for_loop)


State 248

  105 expression_list: expression_list . COMMA expression
  117 do_while_loop: DO compound_statement WHILE LBRACKET expression_list . RBRACKET SEMI_COLON

    RBRACKET  shift, and go to state 257
    COMMA     shift, and go to state 209


State 249

  105 expression_list: expression_list . COMMA expression
  118 do_while_loop: DO statement WHILE LBRACKET expression_list . RBRACKET SEMI_COLON

    RBRACKET  shift, and go to state 258
    COMMA     shift, and go to state 209


State 250

  135 if_statement: IF LBRACKET expression_list RBRACKET compound_statement .
  151 statement: compound_statement .

    ELSE            reduce using rule 135 (if_statement)
    ELSE            [reduce using rule 151 (statement)]
    RETURN          reduce using rule 135 (if_statement)
    RETURN          [reduce using rule 151 (statement)]
    FOR             reduce using rule 135 (if_statement)
    FOR             [reduce using rule 151 (statement)]
    DO              reduce using rule 135 (if_statement)
    DO              [reduce using rule 151 (statement)]
    IF              reduce using rule 135 (if_statement)
    IF              [reduce using rule 151 (statement)]
    WHILE           reduce using rule 135 (if_statement)
    WHILE           [reduce using rule 151 (statement)]
    LBRACKET        reduce using rule 135 (if_statement)
    LBRACKET        [reduce using rule 151 (statement)]
    LCURLY          reduce using rule 135 (if_statement)
    LCURLY          [reduce using rule 151 (statement)]
    RCURLY          reduce using rule 135 (if_statement)
    RCURLY          [reduce using rule 151 (statement)]
    PLUS_PLUS       reduce using rule 135 (if_statement)
    PLUS_PLUS       [reduce using rule 151 (statement)]
    MINUS_MINUS     reduce using rule 135 (if_statement)
    MINUS_MINUS     [reduce using rule 151 (statement)]
    SIZEOF          reduce using rule 135 (if_statement)
    SIZEOF          [reduce using rule 151 (statement)]
    SEMI_COLON      reduce using rule 135 (if_statement)
    SEMI_COLON      [reduce using rule 151 (statement)]
    BITWISE_AND     reduce using rule 135 (if_statement)
    BITWISE_AND     [reduce using rule 151 (statement)]
    MULT            reduce using rule 135 (if_statement)
    MULT            [reduce using rule 151 (statement)]
    PLUS            reduce using rule 135 (if_statement)
    PLUS            [reduce using rule 151 (statement)]
    MINUS           reduce using rule 135 (if_statement)
    MINUS           [reduce using rule 151 (statement)]
    WAVE            reduce using rule 135 (if_statement)
    WAVE            [reduce using rule 151 (statement)]
    EXL_MARK        reduce using rule 135 (if_statement)
    EXL_MARK        [reduce using rule 151 (statement)]
    INTEGER_CONST   reduce using rule 135 (if_statement)
    INTEGER_CONST   [reduce using rule 151 (statement)]
    FLOATING_CONST  reduce using rule 135 (if_statement)
    FLOATING_CONST  [reduce using rule 151 (statement)]
    CHAR_CONST      reduce using rule 135 (if_statement)
    CHAR_CONST      [reduce using rule 151 (statement)]
    IDENTIFIER      reduce using rule 135 (if_statement)
    IDENTIFIER      [reduce using rule 151 (statement)]
    STRING_LITERAL  reduce using rule 135 (if_statement)
    STRING_LITERAL  [reduce using rule 151 (statement)]
    $default        reduce using rule 135 (if_statement)


State 251

  136 if_statement: IF LBRACKET expression_list RBRACKET statement .

    $default  reduce using rule 136 (if_statement)


State 252

  129 while_loop: WHILE LBRACKET expression_list RBRACKET compound_statement .
  151 statement: compound_statement .

    ELSE            reduce using rule 129 (while_loop)
    ELSE            [reduce using rule 151 (statement)]
    RETURN          reduce using rule 129 (while_loop)
    RETURN          [reduce using rule 151 (statement)]
    FOR             reduce using rule 129 (while_loop)
    FOR             [reduce using rule 151 (statement)]
    DO              reduce using rule 129 (while_loop)
    DO              [reduce using rule 151 (statement)]
    IF              reduce using rule 129 (while_loop)
    IF              [reduce using rule 151 (statement)]
    WHILE           reduce using rule 129 (while_loop)
    WHILE           [reduce using rule 151 (statement)]
    LBRACKET        reduce using rule 129 (while_loop)
    LBRACKET        [reduce using rule 151 (statement)]
    LCURLY          reduce using rule 129 (while_loop)
    LCURLY          [reduce using rule 151 (statement)]
    RCURLY          reduce using rule 129 (while_loop)
    RCURLY          [reduce using rule 151 (statement)]
    PLUS_PLUS       reduce using rule 129 (while_loop)
    PLUS_PLUS       [reduce using rule 151 (statement)]
    MINUS_MINUS     reduce using rule 129 (while_loop)
    MINUS_MINUS     [reduce using rule 151 (statement)]
    SIZEOF          reduce using rule 129 (while_loop)
    SIZEOF          [reduce using rule 151 (statement)]
    SEMI_COLON      reduce using rule 129 (while_loop)
    SEMI_COLON      [reduce using rule 151 (statement)]
    BITWISE_AND     reduce using rule 129 (while_loop)
    BITWISE_AND     [reduce using rule 151 (statement)]
    MULT            reduce using rule 129 (while_loop)
    MULT            [reduce using rule 151 (statement)]
    PLUS            reduce using rule 129 (while_loop)
    PLUS            [reduce using rule 151 (statement)]
    MINUS           reduce using rule 129 (while_loop)
    MINUS           [reduce using rule 151 (statement)]
    WAVE            reduce using rule 129 (while_loop)
    WAVE            [reduce using rule 151 (statement)]
    EXL_MARK        reduce using rule 129 (while_loop)
    EXL_MARK        [reduce using rule 151 (statement)]
    INTEGER_CONST   reduce using rule 129 (while_loop)
    INTEGER_CONST   [reduce using rule 151 (statement)]
    FLOATING_CONST  reduce using rule 129 (while_loop)
    FLOATING_CONST  [reduce using rule 151 (statement)]
    CHAR_CONST      reduce using rule 129 (while_loop)
    CHAR_CONST      [reduce using rule 151 (statement)]
    IDENTIFIER      reduce using rule 129 (while_loop)
    IDENTIFIER      [reduce using rule 151 (statement)]
    STRING_LITERAL  reduce using rule 129 (while_loop)
    STRING_LITERAL  [reduce using rule 151 (statement)]
    $default        reduce using rule 129 (while_loop)


State 253

  130 while_loop: WHILE LBRACKET expression_list RBRACKET statement .

    $default  reduce using rule 130 (while_loop)


State 254

  105 expression_list: expression_list . COMMA expression
  124 for_loop_decl_statement: SEMI_COLON expression_list SEMI_COLON expression_list .

    COMMA  shift, and go to state 209

    $default  reduce using rule 124 (for_loop_decl_statement)


State 255

  105 expression_list: expression_list . COMMA expression
  123 for_loop_decl_statement: expression_list SEMI_COLON SEMI_COLON expression_list .

    COMMA  shift, and go to state 209

    $default  reduce using rule 123 (for_loop_decl_statement)


State 256

  121 for_loop_decl_statement: expression_list SEMI_COLON expression_list SEMI_COLON . expression_list
  122                        | expression_list SEMI_COLON expression_list SEMI_COLON .

    LBRACKET        shift, and go to state 32
    PLUS_PLUS       shift, and go to state 34
    MINUS_MINUS     shift, and go to state 35
    SIZEOF          shift, and go to state 36
    BITWISE_AND     shift, and go to state 37
    MULT            shift, and go to state 38
    PLUS            shift, and go to state 39
    MINUS           shift, and go to state 40
    WAVE            shift, and go to state 41
    EXL_MARK        shift, and go to state 42
    INTEGER_CONST   shift, and go to state 43
    FLOATING_CONST  shift, and go to state 44
    CHAR_CONST      shift, and go to state 45
    IDENTIFIER      shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47

    $default  reduce using rule 122 (for_loop_decl_statement)

    CONSTANT                   go to state 48
    primary_expression         go to state 50
    postfix_expression         go to state 51
    unary_expression           go to state 52
    UNARY_OPERATOR             go to state 53
    cast_expression            go to state 54
    multiplicative_expression  go to state 55
    additive_expression        go to state 56
    shift_expression           go to state 57
    relational_expression      go to state 58
    equality_expression        go to state 59
    and_expression             go to state 60
    exclusive_or_expression    go to state 61
    inclusive_or_expression    go to state 62
    logical_and_expression     go to state 63
    logical_or_expression      go to state 64
    conditional_expression     go to state 65
    assignment_expression      go to state 66
    expression                 go to state 178
    expression_list            go to state 259
    bracketed_identifier       go to state 68


State 257

  117 do_while_loop: DO compound_statement WHILE LBRACKET expression_list RBRACKET . SEMI_COLON

    SEMI_COLON  shift, and go to state 260


State 258

  118 do_while_loop: DO statement WHILE LBRACKET expression_list RBRACKET . SEMI_COLON

    SEMI_COLON  shift, and go to state 261


State 259

  105 expression_list: expression_list . COMMA expression
  121 for_loop_decl_statement: expression_list SEMI_COLON expression_list SEMI_COLON expression_list .

    COMMA  shift, and go to state 209

    $default  reduce using rule 121 (for_loop_decl_statement)


State 260

  117 do_while_loop: DO compound_statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON .

    $default  reduce using rule 117 (do_while_loop)


State 261

  118 do_while_loop: DO statement WHILE LBRACKET expression_list RBRACKET SEMI_COLON .

    $default  reduce using rule 118 (do_while_loop)
